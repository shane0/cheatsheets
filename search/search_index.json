{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>home workflow template buddhism</p> <p>retro games</p> <p>Info</p> <ul> <li>cheats snippets and tiny automation tools to supplement this project template:</li> <li>workflow cookiecutter</li> </ul>"},{"location":"#alias","title":"alias","text":"<ul> <li>mkdocs</li> </ul>"},{"location":"#aliases","title":"aliases","text":"<ul> <li>bullet journaling</li> </ul>"},{"location":"#automation","title":"automation","text":"<ul> <li>regex</li> <li>vim</li> </ul>"},{"location":"#bujo","title":"bujo","text":"<ul> <li>bullet journaling</li> </ul>"},{"location":"#click","title":"click","text":"<ul> <li>mkdocs</li> <li>bullet journaling</li> </ul>"},{"location":"#css","title":"css","text":"<ul> <li>css</li> </ul>"},{"location":"#django","title":"django","text":"<ul> <li>django</li> <li>folders and files</li> </ul>"},{"location":"#docs","title":"docs","text":"<ul> <li>markdown</li> </ul>"},{"location":"#folders-and-files","title":"folders and files","text":"<ul> <li>folders and files</li> </ul>"},{"location":"#introspection","title":"introspection","text":"<ul> <li>introspection</li> </ul>"},{"location":"#js","title":"js","text":"<ul> <li>introspection</li> <li>js</li> </ul>"},{"location":"#markdown","title":"markdown","text":"<ul> <li>markdown</li> </ul>"},{"location":"#mkdocs","title":"mkdocs","text":"<ul> <li>mkdocs</li> </ul>"},{"location":"#readability","title":"readability","text":"<ul> <li>markdown</li> <li>regex</li> </ul>"},{"location":"#regex","title":"regex","text":"<ul> <li>regex</li> <li>vim</li> </ul>"},{"location":"#style-guide","title":"style guide","text":"<ul> <li>regex</li> </ul>"},{"location":"#vim","title":"vim","text":"<ul> <li>vim</li> </ul>"},{"location":"backups/","title":"backups","text":""},{"location":"backups/#usage","title":"usage","text":"<p>folder archive</p> <p>zip2</p> <pre><code>tar -cvf name.tar folder/\ngzip name.tar\n</code></pre> <p>unzip1</p> <pre><code>tar -xzvf name.tar.gz\n</code></pre>"},{"location":"backups/#tar-params","title":"tar params","text":"<ul> <li>-c: Create archive</li> <li>-z: Compress the archive with gzip</li> <li>-v: Verbose output</li> <li> <p>-f: specify the filename of the archive - must be last</p> </li> <li> <p>x: tar can collect files or extract them. x does the latter.</p> </li> <li>z: decompress the archive using gzip</li> </ul>"},{"location":"backups/#rsync","title":"rsync","text":"<p>this can deploy a mkdocs site to nginx just adjust the folder names</p> <p>this version also changes ownership which you may not need depending how you setup your groups and permissions</p> <pre><code>#!/bin/sh\nsudo rsync -a -v /home/user/your.com/site/* /var/www/your.com/\nsudo chown root:root /var/www/your.com/\n</code></pre> <pre><code>curl cheat.sh/\ntar\n# tar\n# Archiving utility.\n# Often combined with a compression method, such as gzip or bzip.\n# More information: &lt;https://www.gnu.org/software/tar&gt;.\n\n# Create an archive from files:\ntar cf target.tar file1 file2 file3\n\n# Create a gzipped archive:\ntar czf target.tar.gz file1 file2 file3\n\n# Create a gzipped archive from a directory using relative paths:\ntar czf target.tar.gz -C path/to/directory .\n\n# Extract a (compressed) archive into the current directory:\ntar xf source.tar[.gz|.bz2|.xz]\n\n# Extract an archive into a target directory:\ntar xf source.tar -C directory\n\n# Create a compressed archive, using archive suffix to determine the compression program:\ntar caf target.tar.xz file1 file2 file3\n\n# List the contents of a tar file:\ntar tvf source.tar\n\n# Extract files matching a pattern:\ntar xf source.tar --wildcards \"*.html\"\n\n# Extract a specific file without preserving the folder structure:\ntar xf source.tar source.tar/path/to/extract --strip-components=depth_to_strip\n</code></pre> <ol> <li> <p>https://www.linode.com/docs/quick-answers/linux/compress-files-using-the-command-line/#archive-a-directory)\u00a0\u21a9</p> </li> <li> <p>https://www.howtogeek.com/248780/how-to-compress-and-extract-files-using-the-tar-command-on-linux/ \u21a9</p> </li> </ol>"},{"location":"bash/","title":"bash","text":"<pre><code>#!/usr/bin/env bash\nalias ea='code ~/.bash_aliases'\nalias sa='source ~/.bashrc'\nalias yourserver='ssh user@0.0.0.0'\nalias yourservers='ssh user@0.0.0.0'\nalias c='clear'\n# ls \nalias ll='ls -l'\nalias la='ls -A'\nalias l='ls -CF'\nalias lt='ls --human-readable --size -1 -S --classify'\nalias ctodo='cp -R ~/workflow/todocli/ .'\nalias showremote='echo \"https://github.com/\" $(head -1 &lt;(git remote -v | cut -d \":\" -f2 | cut -d \".\" -f1 | tr -s \" \" \"\\0\"))'\nalias mks='mkdocs serve'\n</code></pre> <ul> <li>config file <code>.inputrc</code></li> </ul> <pre><code>set editing-mode vi\nbind TAB:menu-complete\n</code></pre>"},{"location":"characters/","title":"strange characters","text":"<ul> <li>this is where I will put weird text characters that break code</li> <li>eof bom etc.</li> <li>punctuation and other content used as code</li> </ul> <pre><code>\\n  --&gt; newline, not backslash n\n\\r  --&gt; carriage return, not backslash r\n\\t  --&gt; tab, not backslash t\n\\f  --&gt; formfeed, not backslash f\n</code></pre> <ul> <li>goofy upside down double quotes and such break stuff</li> </ul> <pre><code>\u2019'` ''\"\n</code></pre> <ul> <li>goofy em and en dashes</li> </ul> <pre><code>\u2013 -  \u2014\n</code></pre>"},{"location":"click/","title":"click","text":"<p>click docs workflow cookiecutter</p> <ul> <li>I use click all the time</li> <li>it is a simple and powerful command line tool </li> <li>included in the workflow template which I use in every project</li> </ul>"},{"location":"cookiecutter/","title":"cookiecutter","text":"<p>workflow cookiecutter</p> <pre><code># cookiecutter fix\nexport PATH=$HOME/.local/bin:$PATH\nalias newf='mkdir {utils,bujo,data,docs,results,scripts,srcrtests}'\nalias wf='cookiecutter workflow'\n</code></pre>"},{"location":"css/","title":"css","text":"<p>https://www.w3schools.com/cssref/</p> <p>https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors</p>","tags":["css"]},{"location":"css/#combinators","title":"COMBINATORS","text":"<ul> <li>descendant selector (space)</li> <li>child selector (&gt;)</li> <li>adjacent sibling selector (+)</li> <li>general sibling selector(~)</li> </ul> notation type notes <code>stuff</code> element <code>.stuff</code> class most used <code>#stuff</code> id only first one <pre><code>* {\nborder-color: #839496 !important;\n}\na {\ncolor: #268bd2 !important;\n}\na:visited {\ncolor: #6c71c4 !important;\n}\nbody {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\nhtml {\nbackground-color: #fdf6e3 !important;\n}\ninput,\ntextarea {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\nblockquote,\npre {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.post-actions {\nbackground-color: #eee8d5 !important;\n}\n.textarea-wrapper {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.search--adv {\nbackground-color: #eee8d5 !important;\n}\n.search__autocomplete &gt; .acp-wrap {\nbackground-color: #fdf6e3 !important;\n}\n.search__autocomplete &gt; .acp-wrap &gt; .acp--highlight {\nbackground-color: #eee8d5 !important;\ncolor: #073642 !important;\n}\n.search__autocomplete &gt; .acp-wrap strong {\ncolor: #073642 !important;\n}\n.site-wrapper &gt; #header_wrapper {\nbackground-color: #fdf6e3 !important;\n}\n.site-wrapper &gt; #header_wrapper &gt; #header {\nbackground-color: #fdf6e3 !important;\n}\n.search--header {\nbackground-color: #eee8d5 !important;\n}\n.zci {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.tile--info {\nbackground-color: #fdf6e3 !important;\n}\n.tile--info__expand {\nbackground-color: #93a1a1 !important;\n}\n.tile--c {\nbackground-color: #93a1a1 !important;\ncolor: #073642 !important;\n}\n.module__text {\ncolor: #657b83 !important;\n}\n.about-info-box__heading {\ncolor: #586e75 !important;\n}\n.result.highlight {\nbackground-color: #eee8d5 !important;\n}\n.result__snippet {\ncolor: #657b83 !important;\n}\n.result__snippet b {\ncolor: #586e75 !important;\n}\n.btn--top {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.btn--top:hover {\nbackground-color: #93a1a1 !important;\n}\n.result--sep--hr:before {\nbackground-color: #93a1a1 !important;\n}\n* {\nborder-color: #eee8d5 !important;\n}\n.news .alert .pull-info {\nbackground-color: #ebe4cf !important;\n}\n.link-gray-dark,\n.text-gray-dark {\ncolor: #657b83 !important;\n}\n.bg-white {\nbackground-color: #fdf6e3 !important;\n}\n.border {\nborder-color: #839496 !important;\n}\n.breadcrumb .repo-root.js-repo-root a {\ncolor: #268bd2 !important;\n}\n.breadcrumb strong.final-path {\ncolor: #657b83 !important;\n}\nbutton.ajax-pagination-btn {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\nbutton.ajax-pagination-btn:hover {\nbackground-color: #93a1a1 !important;\n}\n.comment-reactions .btn-link {\ncolor: #657b83 !important;\n}\n.comment-reactions .user-has-reacted {\nbackground-color: #eee8d5 !important;\n}\n.text-gray-dark {\ncolor: #657b83 !important;\n}\n.contrib-number {\ncolor: #586e75 !important;\n}\n.counter {\nbackground-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.diffstat-bar {\ncolor: #657b83 !important;\n}\n.file-header {\nbackground-color: #eee8d5 !important;\n}\n.file-history-tease .participation {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.file-history-tease .participation .quickstat strong {\ncolor: #657b83 !important;\n}\n.file-history-tease .participation a {\ncolor: #93a1a1 !important;\n}\n.file-history-tease .author a {\ncolor: #657b83 !important;\n}\n.file-history-tease-header {\nbackground-color: #eee8d5 !important;\n}\n.file-info-divider {\nbackground-color: #93a1a1 !important;\n}\n.file-wrap {\ncolor: #657b83 !important;\n}\n.file-wrap * {\nbackground-color: transparent !important;\n}\n.filter-bar {\nbackground-color: #ebe4cf !important;\n}\na.filter-item,\n.filter-item {\ncolor: #657b83 !important;\n}\na.filter-item.selected,\n.filter-item.selected {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\na.filter-item:hover,\n.filter-item:hover {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.flash {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.gh-header-number {\ncolor: #93a1a1 !important;\n}\n.ellipsis-expander,\n.hidden-text-expander a {\nbackground-color: #eee8d5 !important;\n}\n.issue-meta {\ncolor: #93a1a1 !important;\n}\n.issues-listing a {\ncolor: #657b83 !important;\n}\n.muted-link {\ncolor: #657b83 !important;\n}\n.new-user-avatar-cta {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.overall-summary {\nborder-color: #93a1a1 !important;\n}\n.pinned-repo-item.border {\nborder-color: #93a1a1 !important;\n}\n.progress-bar {\nbackground-color: #93a1a1 !important;\n}\n.simple-box {\nbackground-color: #eee8d5 !important;\n}\n.social-count {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.scope-badge {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.stats-switcher-wrapper {\nbackground-color: #fdf6e3 !important;\n}\n.stats-switcher-wrapper .numbers-summary li a {\ncolor: #657b83 !important;\n}\n.table-list-header-toggle .btn-link {\ncolor: #93a1a1 !important;\n}\n.table-list-header-toggle .btn-link.selected {\ncolor: #657b83 !important;\n}\n.text-emphasized {\ncolor: #586e75 !important;\n}\n.text-diff-added {\ncolor: #859900 !important;\n}\n.text-diff-deleted {\ncolor: #dc322f !important;\n}\n.avatar,\n.timeline-comment-avatar {\nfilter: opacity(50%);\n}\n.blob-code {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.blob-code-addition {\nbackground-color: rgba(232,255,77,0.1) !important;\n}\n.blob-code-addition .x {\nbackground-color: #647300 !important;\ncolor: #b1bec2 !important;\n}\n.blob-code-deletion {\nbackground-color: rgba(220,50,47,0.2) !important;\n}\n.blob-code-deletion .x {\nbackground-color: #721513 !important;\ncolor: #b1bec2 !important;\n}\n.blob-code-hunk {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\n}\n.blob-code-inner {\ncolor: #657b83 !important;\n}\n.blob-num {\nbackground-color: #fdf6e3 !important;\ncolor: #93a1a1 !important;\n}\n.file {\ncolor: #657b83 !important;\n}\n.form-control {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\n}\n.pl-c {\ncolor: #93a1a1 !important;\n}\n.pl-c1 {\ncolor: #268bd2 !important;\n}\n.pl-e {\ncolor: #b58900 !important;\n}\n.pl-en {\ncolor: #268bd2 !important;\n}\n.pl-k {\ncolor: #859900 !important;\nfont-weight: bold !important;\n}\n.pl-pds {\ncolor: #2aa198 !important;\n}\n.pl-s {\ncolor: #2aa198 !important;\n}\n.pl-smi {\ncolor: #657b83 !important;\n}\n.pl-v {\ncolor: #859900 !important;\nfont-weight: bold !important;\n}\n.border-bottom,\n.border-top {\nborder-color: #eee8d5 !important;\n}\n.boxed-group * {\nborder-color: #93a1a1 !important;\n}\n.boxed-group article {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.boxed-group &gt; h3 {\nbackground-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.more-repos {\nbackground-color: #e9e1c8 !important;\nbox-shadow: inset 0 1px 0 #93a1a1 !important;\n}\n.boxed-group-inner {\nbackground-color: #fdf6e3 !important;\n}\n.branch-action-body {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\n}\n.branch-action-body div {\nborder-color: #93a1a1 !important;\n}\n.branch-action-state-clean .branch-action-icon {\nbackground-color: #859900 !important;\n}\n.branch-action-state-dirty .branch-action-icon,\n.branch-action-state-unstable .branch-action-icon,\n.branch-action-state-unknown .branch-action-icon {\nbackground-color: #b58900 !important;\ncolor: #fff !important;\n}\n.text-shadow-light,\n.branch-group-name,\n.branch-summary {\ncolor: #657b83 !important;\ntext-shadow: none !important;\n}\n.branch-a-b-count .meter {\nbackground-color: #b58900 !important;\n}\n.more-branches,\n.branch-group-heading,\n.branch-infobar,\n.branch-name {\nborder-color: #93a1a1 !important;\nbackground-color: #eee8d5 !important;\n}\n.State,\n.State:visited {\ncolor: #fff !important;\n}\n.State--red {\nbackground-color: #dc322f !important;\ncolor: #fdf6e3 !important;\n}\n.State--green {\nbackground-color: #859900 !important;\ncolor: #fdf6e3 !important;\n}\n.build-status-item {\nbackground-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.build-status-item .build-status-details {\ncolor: #268bd2 !important;\n}\n.capped-card h3 {\nbackground-color: #e9e1c8 !important;\n}\n.capped-card h3 a {\ncolor: #586e75 !important;\n}\n.capped-card-content {\nbackground-color: #fdf6e3 !important;\n}\n.capped-list th {\nbackground-color: #ebe4cf !important;\ncolor: #586e75 !important;\n}\n.capped-list tr:nth-child(2n) {\nbackground-color: #eee8d5 !important;\n}\n.commit,\n.commit-meta,\n.commit-icon .octicon,\n.commit-group-title .octicon-git-commit {\nbackground-color: #fdf6e3 !important;\n}\n.commit *,\n.commit-meta *,\n.commit-icon .octicon *,\n.commit-group-title .octicon-git-commit * {\nborder-color: #93a1a1 !important;\n}\n.commit-author {\ncolor: #657b83 !important;\n}\n.commit-author-section {\ncolor: #657b83 !important;\n}\n.commit-meta {\ncolor: #93a1a1 !important;\n}\n.commit-meta .sha-block {\ncolor: #93a1a1 !important;\n}\n.commit-meta .sha-block .sha {\ncolor: #657b83 !important;\n}\n.commit-ref,\ncode.commit-sha {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.commit-ref .user,\ncode.commit-sha .user {\ncolor: #2aa198 !important;\n}\n.commit-branches *,\n.commit-tease,\n.commit-title {\nbackground-color: rgba(0,0,142,0.2) !important;\nborder: none !important;\n}\n.commit-branches * *,\n.commit-tease *,\n.commit-title * {\ncolor: #586e75 !important;\n}\n.commit-tease-contributors {\nbackground-color: #eee8d5 !important;\n}\ndiv.commit-branches,\ndiv.commit.full-commit p.commit-title,\nqul.branches-list {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\ndiv.commit-branches *,\ndiv.commit.full-commit p.commit-title *,\nqul.branches-list * {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.commit-meta {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.commits-listing:before {\nbackground-color: #eee8d5 !important;\n}\n.full-commit {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\n}\n.full-commit * {\ntext-shadow: none !important;\n}\n.commit-desc pre {\nbackground-color: transparent !important;\ncolor: #657b83 !important;\n}\n.commit.table-list-item {\nborder-color: #eee8d5 !important;\n}\n.commit-meta.commit-author-section {\nbackground-color: transparent !important;\ncolor: #657b83 !important;\n}\n.table-list-cell .commit-title {\nbackground-color: transparent !important;\ncolor: #657b83 !important;\n}\n.completeness-indicator-success {\nbackground-color: #859900 !important;\n}\n.completeness-indicator-problem {\nbackground-color: #b58900 !important;\ncolor: #fff !important;\n}\n.copyable-terminal {\nbackground-color: #eee8d5 !important;\n}\n.blankslate {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.comment-form-head.tabnav {\nbackground-color: #fdf6e3 !important;\n}\n.conversation-list-heading .inner {\nbackground-color: #fdf6e3 !important;\n}\n.discussion-item-closed .discussion-item-icon {\nbackground-color: #dc322f !important;\ncolor: #586e75 !important;\n}\n.discussion-item-icon {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.discussion-item-icon.octicon {\ncolor: #586e75 !important;\n}\n.discussion-timeline:before {\nbackground-color: #839496 !important;\n}\n.discussion-timeline-actions {\nbackground-color: #fdf6e3 !important;\n}\n.drag-and-drop {\nbackground-color: #eee8d5 !important;\n}\n.new-discussion-timeline .closed-banner {\nbackground-color: #839496 !important;\nborder-color: #fdf6e3 !important;\n}\n.timeline-comment {\nbackground-color: #fdf6e3 !important;\nborder-color: #93a1a1 !important;\n}\n.timeline-comment-header {\nbackground-color: #eee8d5 !important;\n}\n.timeline-comment-wrapper {\nborder-color: #fdf6e3 !important;\n}\n.donut-chart &gt; .pending {\nfill: #b58900 !important;\n}\n.dropdown-divider {\nbackground-color: #839496 !important;\n}\n.dropdown-item {\ncolor: #657b83 !important;\n}\n.dropdown-item:hover {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.dropdown-menu {\nbackground-color: #e9e1c8 !important;\ncolor: #586e75 !important;\nborder-color: #839496 !important;\n}\n.files * {\ncolor: #657b83 !important;\n}\n.files tbody tr {\nborder-color: #eee8d5 !important;\n}\n.files tbody tr:nth-child(even) {\nbackground-color: #fcf3da !important;\n}\n.files tbody tr:nth-child(odd) {\nbackground-color: #fdf6e3 !important;\n}\n.files tbody tr:hover * {\nbackground-color: #e9e1c8 !important;\n}\n.btn {\nbackground-image: linear-gradient(to bottom, #eee8d5, #93a1a1) !important;\nborder-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.btn:hover {\nbackground-color: #ebe4cf !important;\n}\n.btn-primary,\n.issues-listing .btn-primary {\nbackground-color: #859900 !important;\nbackground-image: linear-gradient(#859900, #424d00) !important;\ncolor: #000 !important;\nfilter: opacity(62.5%);\n}\n.entry-title a {\ncolor: #268bd2 !important;\n}\n.Header {\nbackground-color: #ebe4cf !important;\nborder-bottom-color: #93a1a1 !important;\n}\n.Header a {\ncolor: #586e75 !important;\n}\n.lang {\ncolor: #586e75 !important;\n}\n.reponav-item,\n.pagehead-tabs-item {\nbackground-color: #eee8d5 !important;\nborder-color: transparent !important;\ncolor: #657b83 !important;\n}\n.reponav-item:visited,\n.pagehead-tabs-item:visited {\ncolor: #657b83 !important;\n}\n.reponav-item.selected,\n.pagehead-tabs-item.selected {\nbackground-color: #fdf6e3 !important;\nborder-color: #dc322f #e9e1c8 transparent !important;\n}\n.site-footer-links * {\ncolor: #657b83 !important;\n}\n.Box-row--focus-gray.navigation-focus {\nbackground-color: #ebe4cf !important;\ncolor: #586e75 !important;\n}\n.js-directory-link {\ncolor: #268bd2 !important;\n}\n.js-site-search-form input,\n.js-chromeless-input-container {\nbackground-color: #fdf6e3 !important;\nborder-color: #93a1a1 !important;\n}\na.label {\ncolor: #000 !important;\nfilter: opacity(75%);\n}\n.notifications-list a {\ncolor: #657b83 !important;\n}\n.notifications-list li {\nbackground-color: #fdf6e3 !important;\n}\n.octicon,\n.octicon-repo {\ncolor: #93a1a1 !important;\n}\n.octicon.type-icon-state-closed,\n.octicon-repo.type-icon-state-closed {\ncolor: rgba(202,0,0,0.65) !important;\n}\n.octicon.type-icon-state-merged,\n.octicon-repo.type-icon-state-merged {\ncolor: #6c71c4 !important;\n}\n.octicon.type-icon-state-open,\n.octicon-repo.type-icon-state-open {\ncolor: rgba(68,103,0,0.65) !important;\n}\n.octicon-alert {\ncolor: #fff !important;\n}\n.octicon-x {\ncolor: #dc322f !important;\n}\n.octicon-check {\ncolor: #859900 !important;\n}\n.octicon-primitive-dot {\ncolor: #b58900 !important;\n}\n.octicon-clippy {\ncolor: #586e75 !important;\n}\n.octicon-git-pull-request,\n.octicon-diff {\ncolor: #fff !important;\n}\n.octicon-markdown {\ncolor: #93a1a1 !important;\n}\n.orghead {\nbackground-color: #eee8d5 !important;\nborder-color: #839496 !important;\nborder-bottom: 0px !important;\ncolor: #586e75 !important;\n}\n.org-name {\ncolor: #586e75 !important;\n}\n.pagehead.orghead {\nbackground-color: #eee8d5 !important;\n}\n.outline-box-highlighted {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.pagination .current {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.pagination .disabled {\nbackground-color: #eee8d5 !important;\ncolor: #93a1a1 !important;\n}\n.pagination .disabled:hover {\nbackground-color: #eee8d5 !important;\n}\n.pagination .gap {\nbackground-color: #eee8d5 !important;\ncolor: #93a1a1 !important;\n}\n.pagination a {\nbackground-color: #eee8d5 !important;\nborder-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.pagination a:hover {\nbackground-color: #93a1a1 !important;\ncolor: #fdf6e3 !important;\n}\n.empty-cell,\n.diffbar {\nbackground-color: #fdf6e3 !important;\n}\n.merge-status-item {\nbackground-color: #e9e1c8 !important;\n}\n.merge-message {\nbackground-color: #ebe4cf !important;\n}\n.pr-toolbar {\nbackground-color: #fdf6e3 !important;\n}\n.review-thread-reply {\nbackground-color: #eee8d5 !important;\n}\n.review-thread-reply .inline-comment-form {\nbackground-color: #fdf6e3 !important;\n}\n.octicon-git-merge {\ncolor: #fff !important;\n}\n.uploaded-files {\nbackground-color: #fdf6e3 !important;\n}\n.upload-progress {\nbackground-color: #eee8d5 !important;\nbox-shadow: 1px 0px 0px #eee8d5 inset;\n}\n#readme .plain {\nbackground-color: #fdf6e3 !important;\n}\n.markdown-body,\n.markdown-body table * {\nbackground-color: #fdf6e3 !important;\nborder-color: #839496 !important;\ncolor: #657b83 !important;\n}\n.markdown-body a,\n.markdown-body table * a {\ncolor: #268bd2 !important;\n}\n.markdown-body code,\n.markdown-body table * code,\n.markdown-body pre,\n.markdown-body table * pre {\nbackground-color: #eee8d5 !important;\n}\n.markdown-body hr,\n.markdown-body table * hr {\nbackground-color: #93a1a1 !important;\n}\n.markdown-body img,\n.markdown-body table * img {\nbackground-color: #fdf6e3 !important;\n}\n.task-list-item.hovered {\nbackground-color: #eee8d5 !important;\n}\n.range-editor {\nbackground-color: #eee8d5 !important;\n}\n.compare-pr-placeholder {\nbackground-color: #ebe4cf !important;\n}\nul.comparison-list &gt; li.title {\nbackground-color: #e9e1c8 !important;\n}\nul.comparison-list {\nbackground-color: #ebe4cf !important;\n}\n.repository-description {\ncolor: #657b83 !important;\n}\n.repository-meta .edit-repository-meta label {\ncolor: #657b83 !important;\n}\n.pagehead.repohead {\nbackground-color: #eee8d5 !important;\n}\n.repository-content .RecentBranches {\nbackground-color: #eee8d5 !important;\nborder-color: #839496 !important;\n}\n.repohead-details-container a {\ncolor: #657b83 !important;\n}\n.select-menu-modal {\nborder-color: #657b83 !important;\n}\n.select-menu-modal * {\ncolor: #657b83 !important;\n}\n.select-menu-header,\n.select-menu-header * {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\ntext-shadow: none !important;\n}\n.select-menu-item {\nbackground-color: #fdf6e3 !important;\n}\n.select-menu-item.navigation-focus,\n.select-menu-item.navigation-focus.selected,\n.select-menu-item.navigation-focus.select-menu-action,\n.select-menu-item-text.navigation-focus {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.repository-sidebar {\nbackground-color: #fdf6e3 !important;\n}\n.thread-subscription-status {\nbackground-color: #fdf6e3 !important;\n}\n.sunken-menu {\nbackground-image: linear-gradient(to right, #eee8d5 0%, #fdf6e3 8px) !important;\nbox-shadow: 1px 0px 0px #eee8d5 inset;\n}\n.sunken-menu:before {\nbackground-image: linear-gradient(#fdf6e3, transparent) !important;\n}\n.sunken-menu:after {\nbackground-image: linear-gradient(transparent, #fdf6e3) !important;\n}\n.sunken-menu-item {\nborder-color: #fdf6e3 !important;\n}\n.sunken-menu-item.selected {\nbackground-color: #fdf6e3 !important;\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.sunken-menu-item.selected:after {\nbackground-color: #cb4b16 !important;\n}\n.sunken-menu-separator:before {\nbackground-image: linear-gradient(to right, #eee8d5 70%, #fdf6e3 100%) !important;\n}\n.state {\ncolor: #586e75 !important;\n}\n.state-closed {\nbackground-color: #dc322f !important;\n}\n.state-open {\nbackground-color: #859900 !important;\n}\n.subnav-item {\ncolor: #657b83 !important;\n}\n.subnav-item:hover {\nbackground-color: #ebe4cf !important;\n}\n.subnav-item:visited {\ncolor: #657b83 !important;\n}\n.subnav-item.selected {\nbackground-color: #eee8d5 !important;\n}\n.subnav-links a:hover {\nbackground-color: #eee8d5 !important;\n}\n.subnav-search input {\nborder-color: #93a1a1 !important;\n}\n.right .tabnav-extra {\ncolor: #93a1a1 !important;\n}\na.tabnav-tab,\n.tabnav-tab {\nborder-color: transparent !important;\ncolor: #93a1a1 !important;\n}\na.tabnav-tab.selected,\n.tabnav-tab.selected {\nbackground-color: #fdf6e3 !important;\nbackground-image: linear-gradient(#eee8d5, #fdf6e3) !important;\nborder-color: #839496 !important;\ncolor: #586e75 !important;\n}\n.table-list tr,\n.table-list li {\nbackground-color: #fdf6e3 !important;\n}\n.table-list tr:hover,\n.table-list li:hover {\nbackground-color: #e9e1c8 !important;\n}\n.table-list-header {\nbackground-color: #eee8d5 !important;\n}\n.text-pending {\ncolor: #b58900 !important;\n}\n.text-pending .octicon-primitive-dot {\ncolor: #b58900 !important;\n}\n.text-red {\ncolor: #dc322f !important;\n}\n.timeline-commits .commit-meta {\nbackground-color: #fdf6e3 !important;\n}\n.timeline-commits .commit-meta .commit-id {\ncolor: #93a1a1 !important;\n}\n.topic-tag.topic-tag-link {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.underline-nav-item {\ncolor: #657b83 !important;\n}\n.underline-nav-item.selected {\nborder-bottom-color: #dc322f !important;\ncolor: #657b83 !important;\n}\n.user-profile-nav {\nbackground-color: #eee8d5 !important;\nborder-color: #839496 !important;\n}\n.user-profile-sticky-bar:after {\nbackground-color: #eee8d5 !important;\nborder-color: #839496 !important;\n}\n.graphs .area {\nfill: #859900;\n}\n.summary-stats li .num {\ncolor: #586e75 !important;\n}\n.viz {\nbackground-color: #ebe4cf !important;\n}\n.facebox-popup {\ncolor: #657b83 !important;\nbackground-color: #fdf6e3 !important;\n}\n.facebox-popup .octicon {\ncolor: #fff !important;\n}\n.facebox-popup .owner-select-target {\ncolor: #657b83 !important;\nbackground-color: #eee8d5 !important;\n}\n.facebox-popup .owner-select-target:hover {\nbackground-color: #93a1a1 !important;\n}\n.suggester {\nbackground-color: #e9e1c8 !important;\n}\n.suggester li.navigation-focus {\nbackground-color: #93a1a1 !important;\n}\n.sfbgg {\nbackground-color: #eee8d5 !important;\n}\n.sbib_a {\nbackground: linear-gradient(to bottom, #eee8d5, #fdf6e3) !important;\n}\ninput#lst-ib,\n#sb_ifc0.sbib_b,\n#gs_taif0 {\nbackground: transparent !important;\n}\n#lst-ib,\n.sbsb_a {\nbackground-color: #fdf6e3 !important;\n}\n.kpbb {\nbackground-image: linear-gradient(to bottom, #59a9e1, #268bd2) !important;\n}\n#hdtbSum {\nbackground-color: #fdf6e3 !important;\n}\n#hdtbMenus.hdtb-td-o {\nbackground-color: #fdf6e3 !important;\n}\n#hdtb-tls.hdtb-tl {\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\n#hdtb-tls.hdtb-tl.hdtb-tl-sel {\nbackground-image: linear-gradient(to bottom, #eee8d5, #fdf6e3) !important;\n}\n#abar_button_opt.ab_button {\nbackground: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\n#appbar {\nbackground-color: #fdf6e3 !important;\n}\ncite {\ncolor: #859900 !important;\n}\n.ab_dropdown {\nbackground-color: #fdf6e3 !important;\n}\ndiv.crp {\nbackground-color: #fdf6e3 !important;\n}\n#fbar {\nbackground-color: #eee8d5 !important;\n}\ntable {\nbackground-color: #fdf6e3 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) &gt; table,\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) &gt; table {\nbackground-color: #cb4b16 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) &gt; tbody:nth-child(1) &gt; tr:nth-child(1) a,\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(1) a {\ncolor: #000 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) &gt; tbody:nth-child(1) &gt; tr:nth-child(2),\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(2) {\nbackground-color: #fdf6e3 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(2) {\nbackground-color: #fdf6e3 !important;\n}\n.title a {\ncolor: #657b83 !important;\n}\n.title a:visited {\ncolor: #93a1a1 !important;\n}\na.storylink {\ncolor: #586e75 !important;\nfont-weight: bold;\n}\n.sitestr {\ncolor: #268bd2 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(3) &gt; td:nth-child(1) {\nbackground-color: #fdf6e3 !important;\n}\n#hnmain .comhead {\ncolor: #586e75 !important;\n}\n#hnmain .c00 {\ncolor: #657b83 !important;\n}\n#hnmain a.hnuser {\ncolor: #b58900 !important;\n}\n#hnmain span.age a {\ncolor: #93a1a1 !important;\n}\n.cdd {\ncolor: rgba(202,0,0,0.65) !important;\n}\n.comment i {\ncolor: #93a1a1 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(4) {\nbackground-color: #fdf6e3 !important;\n}\n#hnmain &gt; tbody:nth-child(1) &gt; tr:nth-child(4) &gt; td:nth-child(1) &gt; table:nth-child(2) &gt; tbody:nth-child(1) &gt; tr:nth-child(1) &gt; td:nth-child(1) {\nbackground-color: #cb4b16 !important;\n}\ntr.Even {\nbackground-color: #eee8d5 !important;\n}\n.BigQuote {\nbackground-color: #eee8d5 !important;\ncolor: #cb4b16 !important;\n}\n.Cat1HL {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.Cat2HL {\nbackground-color: #e9e1c8 !important;\n}\n.Cat3HL {\nbackground-color: #ebe4cf !important;\n}\n.FeatureByline {\nbackground-color: #eee8d5 !important;\nborder: none !important;\n}\n.Headline {\nbackground-color: #e9e1c8 !important;\n}\n.QuotedText {\ncolor: #6c71c4 !important;\n}\nDIV.GAByline {\nbackground-color: #eee8d5 !important;\nborder: none !important;\n}\ntable.OddEven tr:nth-child(even) {\nbackground-color: #fcf3da !important;\n}\ntable.OddEven tr:nth-child(odd) {\nbackground-color: #fdf6e3 !important;\n}\nDIV.CommentBox {\nborder-color: #eee8d5 !important;\n}\nDIV.CommentBox P.CommentTitle {\nbackground-color: #e9e1c8 !important;\n}\n#menu,\n.topnav-container {\nbackground-color: #eee8d5 !important;\n}\n.navmenu ul {\nbackground-color: #eee8d5 !important;\n}\nbody * {\nborder-color: #e9e1c8 !important;\n}\n#content {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n#mw-head,\n#mw-panel {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n#mw-head div.portal,\n#mw-panel div.portal {\nbackground-image: none !important;\n}\n#mw-head {\nbackground-color: #eee8d5 !important;\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\n#mw-panel,\n#p-logo {\nbackground-image: linear-gradient(to right, #fdf6e3, #eee8d5) !important;\n}\ndiv.vectorTabs {\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\ndiv.vectorTabs ul {\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\ndiv.vectorTabs ul li {\nbackground-color: #eee8d5 !important;\nbackground-image: none !important;\npadding: 0px 1px 0px 1px !important;\n}\ndiv.vectorTabs span {\nbackground-color: #eee8d5 !important;\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5) !important;\n}\ndiv.vectorTabs li.selected,\ndiv.vectorTabs li.selected span {\nbackground-color: transparent !important;\nbackground-image: linear-gradient(to bottom, #eee8d5, #fdf6e3) !important;\n}\n.mw-wiki-logo {\nfilter: opacity(50%);\n}\ndiv#simpleSearch #searchInput {\nbackground-color: #fdf6e3 !important;\npadding: 0.05em 0px 0.2em 0.2em !important;\n}\n.ambox,\n.infobox,\n#toc,\n#toctitle,\n.toclevel-1 {\nbackground-color: #eee8d5 !important;\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.catlinks {\nbackground-color: #eee8d5 !important;\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.navbox {\nbackground-color: #eee8d5 !important;\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.navbox .th,\n.navbox .navbox-title {\nbackground-color: #e9e1c8 !important;\n}\n.navbox-abovebelow,\nth.navbox-group,\n.navbox-subgroup,\n.navbox-title {\nbackground-color: #ebe4cf !important;\n}\n.navbox-even {\nbackground-color: #fdf6e3 !important;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\ncode {\nbackground-color: #e9e1c8 !important;\nborder-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\ndiv.thumbinner {\nbackground-color: #eee8d5 !important;\nborder-color: #e9e1c8 !important;\n}\nimg {\nfilter: opacity(75%);\n}\nimg.thumbimage {\nborder-color: #e9e1c8 !important;\n}\n.mw-body .external {\nopacity: 0.5 !important;\n}\ntable.wikitable {\nbackground-color: #fdf6e3 !important;\nborder-color: #e9e1c8 !important;\ncolor: #657b83 !important;\n}\ntable.wikitable &gt; * &gt; tr &gt; th {\nbackground-color: #eee8d5 !important;\n}\ndiv#page div#header {\nbackground-color: #fdf6e3 !important;\n}\ndiv#page div#header a {\ncolor: #6c71c4 !important;\n}\n.post {\nbackground-color: #fdf6e3 !important;\n}\n.post * {\noverflow: auto !important;\n}\n.post h2 {\nbackground-color: #eee8d5 !important;\n}\n.post h2 a {\ncolor: #586e75 !important;\n}\n.post div.entry {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\n.post div.entry blockquote {\nbackground-color: #eee8d5 !important;\n}\n.post div.entry kbd {\nbackground-color: #eee8d5 !important;\nborder-color: #93a1a1 !important;\nbox-shadow: none !important;\ncolor: #586e75 !important;\ntext-shadow: 0px 1px 0px #000 !important;\n}\n.post pre.mode-line {\noverflow: visible !important;\n}\n#sr-header-area {\nbackground-color: #eee8d5 !important;\n}\n#sr-header-area .srdrop .selected {\ncolor: #657b83 !important;\n}\n#sr-header-area #sr-more-link {\nbackground-color: #eee8d5 !important;\n}\n.link.promotedlink.promoted {\nbackground-color: #eee8d5 !important;\n}\n.link .usertext .md {\nbackground-color: #eee8d5 !important;\n}\n.linkinfo {\nbackground-color: #eee8d5 !important;\n}\n.linklisting .odd {\nbackground-color: #eee8d5 !important;\n}\n.thing .title {\ncolor: #657b83 !important;\n}\ndiv.md {\ncolor: #657b83 !important;\n}\nbody.comment {\nbackground-color: #fdf6e3 !important;\n}\n.commentarea &gt; .usertext {\nbackground-color: #fdf6e3 !important;\n}\n.commentarea .menuarea {\nbackground-color: #fdf6e3 !important;\n}\n.comments-page .panestack-title {\nbackground-color: #fdf6e3 !important;\n}\n.listing-chooser {\nbackground-color: #fdf6e3 !important;\n}\n.listing-chooser .intro {\nbackground-color: #93a1a1 !important;\ncolor: #586e75 !important;\n}\n.listing-chooser .grippy {\nbackground-color: #fdf6e3 !important;\n}\n.listing-chooser .grippy:after {\nborder-right: none !important;\n}\n.listing-chooser li {\nbackground-color: #eee8d5 !important;\n}\n.listing-chooser li.selected {\nbackground-color: #93a1a1 !important;\nbox-shadow: none;\n}\n.listing-chooser li a {\ncolor: #657b83 !important;\n}\n.listing-chooser li a .description {\ncolor: #586e75 !important;\n}\n.titlebox {\nbackground-color: #eee8d5 !important;\n}\n.titlebox form.toggle {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n.side .usertext-body .md {\nbackground-color: #eee8d5 !important;\n}\n.side {\nbackground-color: #eee8d5 !important;\n}\n.sidebox .spacer {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.tabmenu li a {\nbackground-color: #eee8d5 !important;\n}\n#header-bottom-right {\nbackground-color: #eee8d5 !important;\n}\n.morelink .nub {\nbackground-color: #eee8d5 !important;\n}\n* {\nborder-color: #839496 !important;\n}\na {\ncolor: #268bd2 !important;\n}\na:visited {\ncolor: #6c71c4 !important;\n}\nbody {\nbackground-color: #fdf6e3 !important;\ncolor: #657b83 !important;\n}\nhtml {\nbackground-color: #fdf6e3 !important;\n}\ninput,\ntextarea {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\ntr:hover,\nblockquote,\npre {\nbackground-color: #eee8d5 !important;\ncolor: #657b83 !important;\n}\n#toolMenu li {\nbackground-color: #fdf6e3 !important;\n}\n.navPanel,\n.navIntraTool {\nbackground-color: #fdf6e3 !important;\n}\n.instruction,\n.sakaiCopyrightInfo {\ncolor: #657b83 !important;\n}\n.listHier th {\nbackground-color: #e9e1c8 !important;\n}\nul.makeMenu {\nbackground-color: #e9e1c8 !important;\nborder: 1px solid #e9e1c8 !important;\n}\ntr.external {\nbackground-color: #e9e1c8 !important;\n}\nhr {\nbackground-color: #e9e1c8 !important;\ncolor: #e9e1c8 !important;\n}\n.bounty-indicator,\n.bounty-indicator-tab {\nbackground-color: #6c71c4 !important;\n}\n.bottom-notice {\nbackground-color: #eee8d5 !important;\n}\n.comments-link {\ncolor: #859900 !important;\n}\n.page-numbers {\nbackground-color: #859900 !important;\ncolor: #073642 !important;\n}\n.page-numbers.current {\nbackground-color: #cb4b16 !important;\ncolor: #fdf6e3 !important;\n}\n.post-menu a {\ncolor: #6c71c4 !important;\n}\n.question-status {\nbackground-color: #eee8d5 !important;\n}\npre code {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\npre code .atn {\ncolor: #268bd2 !important;\n}\npre code .atv {\ncolor: #2aa198 !important;\n}\npre code .com {\ncolor: #93a1a1 !important;\n}\npre code .kwd {\ncolor: #859900 !important;\n}\npre code .lit {\ncolor: #d33682 !important;\n}\npre code .pln,\npre code .pun {\ncolor: #657b83 !important;\n}\npre code .str {\ncolor: #2aa198 !important;\n}\npre code .tag {\ncolor: #859900 !important;\n}\npre code .typ {\ncolor: #b58900 !important;\n}\n#footer {\nbackground-color: #ebe4cf !important;\ncolor: #657b83 !important;\n}\n#footer #footer-sites th {\ncolor: #586e75 !important;\n}\n.top-footer-links a {\ncolor: #859900 !important;\n}\n.so-header {\nbackground-color: #e9e1c8 !important;\ncolor: #586e75 !important;\n}\n.so-header a {\ncolor: #859900 !important;\n}\n.so-header .navigation .-list .-item :hover {\nbackground-color: #859900 !important;\ncolor: #002b36 !important;\n}\n.topbar-dialog {\nbackground-color: #fdf6e3 !important;\nbox-shadow: #93a1a1 5px 5px 5px;\n}\n.topbar-dialog .current-site-container {\nbackground-color: #fdf6e3 !important;\n}\n.topbar-dialog .header {\nbackground-color: #eee8d5 !important;\n}\n.topbar-dialog .header a {\ncolor: #586e75 !important;\n}\n.topbar-dialog .site-link {\ncolor: #586e75 !important;\n}\n#header {\nbackground-color: #e9e1c8 !important;\n}\n#question-header .question-hyperlink {\ncolor: #586e75 !important;\n}\n#hlogo a {\nfilter: opacity(75%);\n}\n.new-post-activity {\nbackground-color: #eee8d5 !important;\n}\n.tagged-interesting {\nbackground-color: #e9e1c8 !important;\n}\ndiv.answered-accepted {\nbackground-color: #859900 !important;\ncolor: #073642 !important;\n}\ndiv.answered-accepted .mini-counts {\nbackground-color: #859900 !important;\ncolor: #073642 !important;\n}\n.answered .mini-counts span {\ncolor: #859900 !important;\n}\n.unanswered .mini-counts span {\ncolor: #657b83 !important;\n}\n#hot-network-questions a {\ncolor: #2aa198 !important;\n}\n#hot-network-questions h4 a.js-gps-track {\ncolor: #586e75 !important;\n}\n#sidebar .community-bulletin .bulletin-item-content a {\ncolor: #586e75 !important;\n}\n#sidebar .module.community-bulletin {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n#sidebar .question-hyperlink {\ncolor: #2aa198 !important;\n}\n.newuser {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.label-key {\ncolor: #657b83 !important;\n}\n.label-key b {\ncolor: #586e75 !important;\n}\n#h-chat-link {\ncolor: #586e75 !important;\n}\n.ad502-room {\nbackground-color: #eee8d5 !important;\nbox-shadow: #93a1a1 0px 1px 3px;\ncolor: #586e75 !important;\n}\n#tabs a {\nbackground-color: transparent !important;\nbackground-image: linear-gradient(to bottom, #fdf6e3, #eee8d5);\ncolor: #586e75 !important;\n}\n#tabs a.youarehere {\nbackground-image: linear-gradient(to bottom, #cb4b16, #fdf6e3);\ncolor: #002b36 !important;\n}\n.post-tag {\nbackground-color: #93a1a1 !important;\ncolor: #fdf6e3 !important;\n}\n.post-tag::before {\nbackground-color: #fdf6e3 !important;\n}\na.comment-user.owner {\nbackground-color: #859900 !important;\ncolor: #073642 !important;\n}\n.post-signature {\nbackground-color: #eee8d5 !important;\ncolor: #586e75 !important;\n}\n.post-signature a {\ncolor: #2aa198 !important;\n}\n.post-signature.owner .user-info .user-details a {\ncolor: #859900 !important;\n}\n.post-signature span.relativetime {\ncolor: #586e75 !important;\n}\n.vote {\nbackground-color: #eee8d5 !important;\n}\n.vote .star-off {\nfilter: opacity(75%);\n}\n.vote .star-on {\nfilter: opacity(50%) !important;\n}\n.vote .vote-down-off,\n.vote .vote-up-off {\nfilter: opacity(50%);\n}\n.answer-votes {\nbackground-color: #93a1a1 !important;\ncolor: #fdf6e3 !important;\n}\n</code></pre>","tags":["css"]},{"location":"find/","title":"Find","text":""},{"location":"find/#find","title":"find","text":"<ul> <li>find file by type &amp; grep it</li> </ul> <pre><code>find . -name \\*.md -print0 | xargs -0 grep runner\n</code></pre> <pre><code>find . -type f -print | xargs grep \"example\"\n</code></pre>"},{"location":"fixtures/","title":"fixtures","text":"<p>Python fixtures are functions that provide data, objects, or resources to test functions.</p> <p>They are defined in test files and can be shared across test functions.</p> <p>Fixtures can help simplify test code and make tests more modular and reusable.</p> <p>The main features of Python fixtures are:</p> <ul> <li>Reusable: Fixtures can be reused across multiple test functions. This can save time and effort, and help to make tests more concise and readable.</li> <li>Modular: Fixtures can be used to modularize test code, making it easier to maintain and update.</li> <li>Scoped: Fixtures can be scoped to different levels, such as function, class, module, or session. This allows you to control when fixtures are created and destroyed, and how they are shared between tests.</li> <li>Parametrized: Fixtures can be parametrized to run with different values. This can be useful for testing different scenarios or configurations.</li> </ul> <p>Here are some examples of how Python fixtures can be used:</p> <ul> <li>Provide test data: Fixtures can be used to provide test data to test functions. This can help to reduce the amount of boilerplate code in tests, and make tests more robust.</li> <li>Create mock objects: Fixtures can be used to create mock objects for use in tests. This can be useful for testing code that interacts with external systems or resources.</li> <li>Set up test environments: Fixtures can be used to set up test environments, such as databases or web servers. This can be useful for testing code that interacts with these systems.</li> </ul> <p>Overall, Python fixtures are a powerful tool that can be used to make tests more reusable, modular, and robust.</p> <p>Here are some additional benefits of using Python fixtures:</p> <ul> <li>Tests are more reliable: Fixtures can help to ensure that tests are more reliable by providing a consistent environment for each test to run in.</li> <li>Tests are easier to maintain: Fixtures can make tests easier to maintain by encapsulating complex setup and teardown code.</li> <li>Tests are more readable: Fixtures can make tests more readable by removing boilerplate code from test functions.</li> </ul> <p>If you are writing Python tests, I encourage you to use fixtures to make your tests more reusable, modular, and robust.</p>"},{"location":"fixtures/#example","title":"example","text":"<p>Sure, here is an example of a Python fixture that does not use any database:</p> <pre><code>import pytest\n# Define a fixture that provides a list of numbers\n@pytest.fixture\ndef numbers():\nreturn [1, 2, 3, 4, 5]\n# Define a test function that uses the numbers fixture\ndef test_sum_of_numbers(numbers):\nassert sum(numbers) == 15\n# Run the test\npytest.main()\n</code></pre> <p>This fixture simply returns a list of numbers. The test function then uses the list of numbers to calculate the sum and assert that it is equal to 15.</p> <p>This example shows how fixtures can be used to provide any kind of data to tests, not just database connections. Fixtures can be used to provide test data, mock objects, or any other resources that your tests need.</p> <p>Here is another example of a fixture that does not use any database:</p> <pre><code>import pytest\n# Define a fixture that provides a mock object for a file system\n@pytest.fixture\ndef mock_file_system():\nclass MockFileSystem:\ndef __init__(self):\nself.files = {}\ndef read_file(self, filename):\nreturn self.files[filename]\ndef write_file(self, filename, content):\nself.files[filename] = content\nreturn MockFileSystem()\n# Define a test function that uses the mock_file_system fixture\ndef test_write_file(mock_file_system):\n# Write some content to a file\nmock_file_system.write_file(\"my_file.txt\", \"Hello, world!\")\n# Read the content back from the file\ncontent = mock_file_system.read_file(\"my_file.txt\")\n# Assert that the content is correct\nassert content == \"Hello, world!\"\n# Run the test\npytest.main()\n</code></pre> <p>This fixture provides a mock object for a file system. The test function then uses the mock file system to write some content to a file and read it back. Finally, the test function asserts that the content is correct.</p> <p>This example shows how fixtures can be used to provide mock objects to tests. Mock objects can be useful for testing code that interacts with external systems or resources.</p> <p>Overall, fixtures are a powerful tool that can be used to provide any kind of data, objects, or resources to tests. This can make tests more reusable, modular, and robust.</p>"},{"location":"fixtures/#sqlite-example","title":"sqlite example","text":"<pre><code>import pytest\nimport sqlite3\n# Define a fixture that provides a database connection\n@pytest.fixture\ndef database_connection():\nconn = sqlite3.connect(\":memory:\")\nyield conn\nconn.close()\n# Define a test function that uses the database_connection fixture\ndef test_create_user(database_connection):\n# Create a new user in the database\ncur = database_connection.cursor()\ncur.execute(\"CREATE TABLE users (id INTEGER PRIMARY KEY, name TEXT)\")\ncur.execute(\"INSERT INTO users (name) VALUES (?)\", (\"John Doe\",))\ndatabase_connection.commit()\n# Assert that the user was created successfully\ncur.execute(\"SELECT * FROM users\")\nuser = cur.fetchone()\nassert user[1] == \"John Doe\"\n# Run the test\npytest.main()\n</code></pre> <p>This fixture uses the <code>sqlite3</code> library to connect to a database in memory. The test function then uses the connection to create a new user table and insert a new user into the table. Finally, the test function asserts that the user was created successfully.</p> <p>This example shows how fixtures can be used to provide resources to tests without using any third-party libraries. This can be useful if you want to keep your tests as independent as possible.</p>"},{"location":"fixtures/#db-example","title":"db example","text":"<p>Python fixtures are functions that provide data, objects, or resources to test functions. They are defined in test files and can be shared across test functions. Fixtures can help simplify test code and make tests more modular and reusable.</p> <p>The main features of Python fixtures are:</p> <ul> <li>Reusable: Fixtures can be reused across multiple test functions. This can save time and effort, and help to make tests more concise and readable.</li> <li>Modular: Fixtures can be used to modularize test code, making it easier to maintain and update.</li> <li>Scoped: Fixtures can be scoped to different levels, such as function, class, module, or session. This allows you to control when fixtures are created and destroyed, and how they are shared between tests.</li> <li> <p>Parametrized: Fixtures can be parametrized to run with different values. This can be useful for testing different scenarios or configurations.</p> </li> <li> <p>examples of how Python fixtures can be used:</p> </li> <li> <p>Provide test data: Fixtures can be used to provide test data to test functions. This can help to reduce the amount of boilerplate code in tests, and make tests more robust.</p> </li> <li>Create mock objects: Fixtures can be used to create mock objects for use in tests. This can be useful for testing code that interacts with external systems or resources.</li> <li> <p>Set up test environments: Fixtures can be used to set up test environments, such as databases or web servers. This can be useful for testing code that interacts with these systems.</p> </li> <li> <p>additional benefits of using Python fixtures:</p> </li> <li> <p>Tests are more reliable: Fixtures can help to ensure that tests are more reliable by providing a consistent environment for each test to run in.</p> </li> <li>Tests are easier to maintain: Fixtures can make tests easier to maintain by encapsulating complex setup and teardown code.</li> <li>Tests are more readable: Fixtures can make tests more readable by removing boilerplate code from test functions.</li> </ul>"},{"location":"flask/","title":"flask","text":"<pre><code>flask stuff\nalias efl='export FLASK_ENV=development'\nalias eefl='echo $FLASK_ENV'\nalias fdm='flask db migrate'\nalias fdu='flask db upgrade'\n</code></pre>"},{"location":"folders/","title":"folders","text":"<p>find the size of a folder</p> <pre><code>du -sh /dirname\n</code></pre> <pre><code>alias jf='mkdir \"$(date +%F)\" &amp;&amp; cd \"$(date +%F)\"'\nalias fj='vim ./\"$(date +%F)\".md'\n</code></pre>"},{"location":"fzf/","title":"fuzzy finder","text":"<ul> <li>https://github.com/junegunn/fzf</li> <li>finds files fast from the command line</li> </ul> <pre><code>alias v='vi $(fzf)'\n</code></pre>"},{"location":"git/","title":"git","text":"<pre><code>git tag v1.0.0\ngit push origin v1.0.0\n``\n- my push script\n\n```sh\n# push.sh 'comment'\n#!/usr/bin/env bash\n# ./push.sh commit_message\nfunction addcommitpush () {\nmessage=(\\'\"$@\"\\')\ncurrent=$(git branch | grep \"*\" | cut -b 3-)\n# read -r -i \"$current\" -e branch\nremote=$(git remote -v | head -1 | cut -d ' ' -f 1 )\necho push local branch \"$current\" to \"$remote\" y n ?\n  read -r yn\n  if [ \"$yn\" = y ]; then\n# echo \"$current\" \"$remote\"\ngit add -A &amp;&amp; git commit -a -m \"$message\"\ngit push origin \"$current\"\nelse\necho \"nope\"\nfi\n}\naddcommitpush \"$1\"\nmkdocs gh-deploy\nopen https://github.com/shane0/cheatsheets/actions\n</code></pre>"},{"location":"html/","title":"html","text":""},{"location":"jobs/","title":"jobs","text":"<pre><code>jobs\n</code></pre> <ul> <li>if there is one open stopped you can bring it to the foreground</li> </ul> <pre><code>fg\n</code></pre> <ul> <li>or you can kill it</li> </ul> <pre><code>jobs -p | xargs kill -9\n</code></pre>"},{"location":"julian/","title":"julian dates","text":"<ul> <li>I find julian dates useful for various reasons</li> </ul> <pre><code># julian dates\nalias day='date +%D &amp;&amp; date +%j &amp;&amp; date +%A &amp;&amp; date +%d &amp;&amp; date +%u'\nalias fday='mkdir \"$(date +%j)\" &amp;&amp; cd \"$(date +%j)\"'\nalias mday='vim ./\"$(date +%j)\".md'\nalias fj='vim ./\"$(date +%F)\".md'\nalias week='date +%V'\nalias month='date +%B &amp;&amp; date +%m'\nalias year='date +%Y'\n</code></pre>"},{"location":"julian/#python","title":"python","text":"<ul> <li>find my code</li> </ul>"},{"location":"julian/#js","title":"js","text":"<ul> <li>find my code</li> </ul>"},{"location":"linux/","title":"linux","text":"<pre><code>alias r='ranger'\n# tmux\nalias ta='tmux attach -t'\nalias tl='tmux list-sessions'\nalias tksv='tmux kill-server'\nalias tkss='tmux kill-session -t'\nalias v='vi $(fzf)'\n# free space\nalias freespace='df -H --output=size,used,avail'\nalias fspace='sudo du -Sh | sort -rh | head -5'\nalias cports='sudo lsof -i -P -n | grep LISTEN'\n# commenting for shellcheck fixme later\n#alias trace='mtr --report-wide --curses $1'\n#alias killtcp='sudo ngrep -qK 1 $1 -d wlan0'\nalias usage='ifconfig wlan0 | grep bytes'\nalias connections='sudo lsof -n -P -i +c 15'\n# alias ducks='du -cks -- * | sort -rn | head\\'alias ducks=\\'du -cks -- * | sort -rn | head'\nalias myip='ip addr | grep inet'\n</code></pre>"},{"location":"macos/","title":"mac os","text":"<pre><code># macos find what is listening\nalias whohearsme='sudo lsof -i -P | grep LISTEN | grep :$PORT'\n# opens finder form terminal - open .\n# for mac\nalias lt='du -sh * | sort -h'\nalias howmany='find . -type f -print | wc -l'\n</code></pre>"},{"location":"markdown/","title":"markdown","text":"","tags":["markdown","docs","readability"]},{"location":"markdown/#configuration-file","title":"configuration file","text":"<ul> <li><code>.markdownlint.json</code></li> </ul> <pre><code>{\n\"ignore\": [\n\"index.md\",\n\"future.md\"\n],\n\"default\": true,\n\"MD013\": false,\n\"MD033\": false,\n\"MD024\": false,\n\"MD026\": false,\n\"MD041\": false,\n\"MD046\": false,\n\"MD045\": false\n}\n</code></pre>","tags":["markdown","docs","readability"]},{"location":"markdown/#alias","title":"alias","text":"<pre><code># this calls a click command that runs markdownlint\n# on my mac uses fli normally I use cli\nalias zz='fli bujo zl'\n</code></pre>","tags":["markdown","docs","readability"]},{"location":"markdown/#click","title":"click","text":"<pre><code>Usage: cli.py bujo [OPTIONS] COMMAND [ARGS]...\n\nbullet journaling &amp; todocli\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  zl         markdownlint\n</code></pre> <ul> <li>that calls the markdownlint command line</li> </ul> <pre><code>@cli.command()\ndef zl():\n    \"\"\"markdownlint\"\"\"\ncmd = \"npx markdownlint 'docs/*.md' --config .markdownlint.json\"\nos.system(cmd)\n</code></pre>","tags":["markdown","docs","readability"]},{"location":"markdown/#github-action","title":"github action","text":"<ul> <li><code>.github/workflows/markdownlint.yml</code></li> </ul> <pre><code>name: markdownlint\n\non: [push, pull_request]\n\njobs:\n  markdownlint:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v2\n      - name: Install dependencies\n        run: npm install markdownlint-cli\n      - name: Run markdownlint\n        run: npx markdownlint 'docs/index.md' --config .markdownlint.json --ignore docs/*.md\n</code></pre>","tags":["markdown","docs","readability"]},{"location":"markdown/#command-line","title":"command line","text":"<pre><code>Usage: markdownlint [options] &lt;files|directories|globs&gt;\n\nMarkdownLint Command Line Interface\n\nOptions:\n  -V, --version                               output the version number\n  -c, --config [configFile]                   configuration file (JSON, JSONC, JS, or YAML)\n-d, --dot                                   include files/folders with a dot (for example `.github`)\n-f, --fix                                   fix basic errors (does not work with STDIN)\n-i, --ignore [file|directory|glob]          file(s) to ignore/exclude (default: [])\n-j, --json                                  write issues in json format\n  -o, --output [outputFile]                   write issues to file (no console)\n-p, --ignore-path [file]                    path to file with ignore pattern(s)\n-q, --quiet                                 do not write issues to STDOUT\n  -r, --rules  [file|directory|glob|package]  include custom rule files (default: [])\n-s, --stdin                                 read from STDIN (does not work with files)\n--enable [rules...]                         Enable certain rules, e.g. --enable MD013 MD041 --\n  --disable [rules...]                        Disable certain rules, e.g. --disable MD013 MD041 --\n  -h, --help                                  display help for command\n</code></pre>","tags":["markdown","docs","readability"]},{"location":"mkdocs/","title":"mkdocs","text":"","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#alias","title":"alias","text":"<ul> <li>serve with alias</li> </ul> <pre><code>alias mks='mkdocs serve'\n</code></pre>","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#click","title":"click","text":"<ul> <li>serve with click</li> </ul> <pre><code>cli bujo m\n</code></pre>","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#citation1","title":"citation1","text":"<pre><code>- this[^1]\n[^1]: requires software installation\n</code></pre>","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#includes","title":"includes","text":"<ul> <li><code>-8&lt;- \"includes/example.md\"</code></li> <li>embed docs on multiple pages</li> <li>you can also splice in partial files using line numbers <code>example.md:2:5</code></li> </ul> <pre><code># example include\n- this file is at: `includes/example.md`\n- it can be rendered on any page using the example snippet\n</code></pre>","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#site-wide-glossary","title":"site wide glossary","text":"<ul> <li>mouse over this: PRAJNA</li> <li>add more here: <code>includes/abbreviations.md</code></li> </ul> <pre><code>pip install pymdown-extensions\n</code></pre> <pre><code>python3 -m venv venv\nsource venv/bin/activate\npip install mkdocs mkdocs-material\nmkdocs serve\n</code></pre> <pre><code>pip show mkdocs-material\npip install --upgrade mkdocs-material\n</code></pre> <pre><code>pip install --upgrade mkdocs-material\n</code></pre>","tags":["alias","mkdocs","click"]},{"location":"mkdocs/#github-actions","title":"github actions","text":"<ul> <li>this site is deployed using this command <code>mkdocs gh-deploy</code></li> <li>github pages actions deploys updates on this branch <code>gh-pages</code></li> </ul> <ol> <li> <p>citations go here\u00a0\u21a9</p> </li> </ol>","tags":["alias","mkdocs","click"]},{"location":"mongo/","title":"mongo","text":""},{"location":"pip/","title":"pip","text":"<p>save your package list</p> <pre><code>pip freeze &gt;&gt; requirements.txt\n</code></pre> <p>install your package list on another machine</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>updates</p> <pre><code>pip install --upgrade mkdocs-material\n</code></pre>"},{"location":"postgres/","title":"postgres","text":"<p>PostgreSQL command line:</p> <p>Connecting to PostgreSQL</p> <pre><code>psql -U username -d database\n</code></pre> <p>This will connect you to the PostgreSQL server as the specified user and database.</p> <p>Creating a table</p> <pre><code>CREATE TABLE table_name (\ncolumn_name1 data_type1,\ncolumn_name2 data_type2,\n...\n);\n</code></pre> <p>This will create a table with the specified name and columns.</p> <p>Inserting data into a table</p> <pre><code>INSERT INTO table_name (column_name1, column_name2, ...) VALUES (value1, value2, ...);\n</code></pre> <p>This will insert a new row into the specified table with the specified values.</p> <p>Selecting data from a table</p> <pre><code>SELECT * FROM table_name;\n</code></pre> <p>This will select all of the rows from the specified table. You can also specify specific columns to select by adding their names to the <code>SELECT</code> clause.</p> <p>Updating data in a table</p> <pre><code>UPDATE table_name SET column_name = new_value WHERE condition;\n</code></pre> <p>This will update the value of the <code>column_name</code> column in all of the rows in the table that meet the <code>condition</code>.</p> <p>Deleting data from a table</p> <pre><code>DELETE FROM table_name WHERE condition;\n</code></pre> <p>This will delete all of the rows in the table that meet the <code>condition</code>.</p> <p>Other common commands</p> <ul> <li><code>\\l</code>: List all of the databases on the server.</li> <li><code>\\c database_name</code>: Connect to the specified database.</li> <li><code>\\d table_name</code>: Describe the specified table.</li> <li><code>\\q</code>: Quit PostgreSQL.</li> </ul> <p>Example queries</p> <pre><code># Create a table called users with two columns, id and name\nCREATE TABLE users (\nid INT PRIMARY KEY,\nname VARCHAR(255)\n);\n# Insert a new row into the users table\nINSERT INTO users (id, name) VALUES (1, 'John Doe');\n# Select all of the users from the users table\nSELECT * FROM users;\n# Select the user with the ID of 1\nSELECT * FROM users WHERE id = 1;\n# Update the name of the user with the ID of 1 to \"Jane Doe\"\nUPDATE users SET name = 'Jane Doe' WHERE id = 1;\n# Delete the user with the ID of 1\nDELETE FROM users WHERE id = 1;\n</code></pre>"},{"location":"powershell/","title":"powershell","text":""},{"location":"powershell/#zip-folder","title":"zip folder","text":"<pre><code>#backup any folder\nfunction zipit{\nparam([string]$copyme)\nif (-not (test-path \"$env:ProgramFiles\\7-Zip\\7z.exe\")) {throw \"$env:ProgramFiles\\7-Zip\\7z.exe needed\"} \nset-alias sz \"$env:ProgramFiles\\7-Zip\\7z.exe\" \n$Source = \"$copyme\"\n$Target = \"$copyme\\copy.zip\"\nsz a -mx=9 $Target $Source\n}\nzipit c:\\path\n</code></pre>"},{"location":"python/","title":"python","text":"<pre><code>#alias vba='. venv/bin/activate'\nalias vvv='virtualevn venv'\nalias vv='source venv/bin/activate'\nalias vf='pip install --editable .'\nalias vr='pip install -r requirements.txt'\n</code></pre> <ul> <li>python docs</li> <li>cht sh</li> <li>rosetta code</li> <li>talk python</li> <li></li> <li> </li> <li> <p>quick web server</p> </li> </ul> <pre><code>python -m SimpleHTTPServer 8000\n</code></pre>"},{"location":"react/","title":"react","text":""},{"location":"regex/","title":"regex","text":"<ul> <li>regex is an extremely powerful tool for editing text and automation</li> <li>you can fix a problem with regex </li> <li>try it: https://regex101.com/</li> </ul>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#between-around","title":"between around","text":"<ul> <li>find text with something before, in between or after</li> </ul> <pre><code>(?&lt;=This is)(.*)(?=sentence)\n</code></pre> <ul> <li>Groups &amp; Lookaround</li> </ul> <pre><code>(abc) capture group\n\\1 backreference to group #1\n(?:abc) non-capturing group\n(?=abc) positive lookahead\n(?!abc) negative lookahead\n</code></pre>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#remove-blank-lines","title":"remove blank lines","text":"<p>^(\\s)*$\\n</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#timestamps","title":"timestamps","text":"<p>remove some timestamps from end of ticket summary</p> <pre><code>\\ \\d{1,}.*$\n</code></pre>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#validation","title":"validation","text":"<p>email</p> <pre><code>\"^[a-zA-Z][\\w\\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\\w\\.-]*[a-zA-Z0-9]\\.[a-zA-Z][a-zA-Z\\.]*[a-zA-Z]$\"\n</code></pre>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#past-or-future-tense","title":"past or future tense","text":"<ul> <li>docs should be in present tense</li> </ul> <p>To write a regular expression that replaces any upper case with its lower case, you can use the following pattern:</p> <p>\" [A-Z] \"</p> <p>This pattern matches any single uppercase letter.</p> <p>To replace the matched patterns with their lower case equivalents, you can use the following replacement string:</p> <p>\" \\l \"</p> <p>This replacement string uses the <code>\\l</code> modifier to convert the matched character to lowercase.</p> <p>Here is an example of how to use this regular expression in Python:</p> <pre><code>import re\nstring = \"THIS IS AN UPPERCASE STRING.\"\n# Replace any upper case with its lower case\nnew_string = re.sub(r'[A-Z]', r'\\l', string)\n# Print the new string\nprint(new_string)\n</code></pre> <p>Output:</p> <pre><code>this is an uppercase string.\n</code></pre> <p>This regular expression can be used in any programming language that supports regular expressions.</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#passive-voice","title":"passive voice","text":"<ul> <li>you should write doc in active voice</li> </ul> <p>To write a regular expression that replaces any upper case with its lower case, you can use the following pattern:</p> <p>\" [A-Z] \"</p> <p>This pattern matches any single uppercase letter.</p> <p>To replace the matched patterns with their lower case equivalents, you can use the following replacement string:</p> <p>\" \\l \"</p> <p>This replacement string uses the <code>\\l</code> modifier to convert the matched character to lowercase.</p> <p>Here is an example of how to use this regular expression in Python:</p> <pre><code>import re\nstring = \"THIS IS AN UPPERCASE STRING.\"\n# Replace any upper case with its lower case\nnew_string = re.sub(r'[A-Z]', r'\\l', string)\n# Print the new string\nprint(new_string)\n</code></pre> <p>Output:</p> <pre><code>this is an uppercase string.\n</code></pre> <p>This regular expression can be used in any programming language that supports regular expressions.</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#capitol-to-lower","title":"capitol to lower","text":"<p>To write a regular expression that replaces any upper case with its lower case, you can use the following pattern:</p> <p>\" [A-Z] \"</p> <p>This pattern matches any single uppercase letter.</p> <p>To replace the matched patterns with their lower case equivalents, you can use the following replacement string:</p> <p>\" \\l \"</p> <p>This replacement string uses the <code>\\l</code> modifier to convert the matched character to lowercase.</p> <p>Here is an example of how to use this regular expression in Python:</p> <pre><code>import re\nstring = \"THIS IS AN UPPERCASE STRING.\"\n# Replace any upper case with its lower case\nnew_string = re.sub(r'[A-Z]', r'\\l', string)\n# Print the new string\nprint(new_string)\n</code></pre> <p>Output:</p> <pre><code>this is an uppercase string.\n</code></pre> <p>This regular expression can be used in any programming language that supports regular expressions.</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#title-case","title":"title case","text":"<p>To write a regular expression that replaces any word using Title case with lower case title, you can use the following pattern:</p> <pre><code>\\b[A-Z]\\w+\\b\n</code></pre> <p>This pattern matches any word that starts with an uppercase letter (<code>\\b[A-Z]</code>) followed by one or more lowercase letters (<code>\\w+</code>). <code>\\b</code> is a word boundary, which ensures that the match is a complete word and not just part of a larger word.</p> <p>To replace the matched patterns with lower case title, you can use the following replacement string:</p> <pre><code>\\1\\L$2\n</code></pre> <p>This replacement string uses the capture group <code>\\1</code> to capture the first letter of the matched word. It then uses the <code>\\L</code> modifier to convert the first letter to lowercase. The <code>$2</code> capture group is used to capture the rest of the matched word, which is then left unchanged.</p> <p>Here is an example of how to use this regular expression in Python:</p> <pre><code>import re\nstring = \"This Is A Title Case String.\"\n# Replace any word using Title case with lower case title\nnew_string = re.sub(r'\\b[A-Z]\\w+\\b', r'\\1\\L$2', string)\n# Print the new string\nprint(new_string)\n</code></pre> <p>Output:</p> <pre><code>This is a title case string.\n</code></pre> <p>This regular expression can be used in any programming language that supports regular expressions.</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#trailing","title":"trailing .","text":"<p>To write a regular expression that replaces trailing . symbols with nothing, you can use the following pattern:</p> <pre><code>\\.+$\n</code></pre> <p>This pattern matches one or more periods (<code>.</code>) at the end of the string (<code>$</code>).</p> <p>To replace the matched patterns with nothing, you can use the following replacement string:</p> <pre><code>\"\"\n</code></pre> <p>This is an empty string, so it will effectively remove the trailing periods.</p> <p>Here is an example of how to use this regular expression in Python:</p> <pre><code>import re\nstring = \"This string has a trailing period.\"\n# Replace the trailing . with nothing\nnew_string = re.sub(r'\\.$', \"\", string)\n# Print the new string\nprint(new_string)\n</code></pre> <p>Output:</p> <pre><code>This string has a trailing period\n</code></pre> <p>This regular expression can be used in any programming language that supports regular expressions.</p>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#old-examples","title":"old examples","text":"","tags":["regex","automation","readability","style guide"]},{"location":"regex/#old-micro-app","title":"old micro app","text":"<pre><code>        $cleanoutput = $_.ToString() -replace 'System.Exception: ERROR: ', \"\"\n$cleanoutput = $cleanoutput.Split(\",\")\n$regname = [regex]\"(?&lt;=\\[\\\\\\\\server\\\\path\\\\path\\\\\\d{3}Matchme_)(.*?)(?=\\\\0)\"\n$cleanname = $regname.Match($cleanoutput)\nwrite-host $cleanname\n$html += \"&lt;br&gt;\"\n$html += $cleanname\n$regtranid = [regex]\"(?&lt;=The)(.*?)(?=has)\"\n$cleantran = $regtranid.Match($cleanoutput)\nwrite-host $cleantran\n</code></pre>","tags":["regex","automation","readability","style guide"]},{"location":"regex/#utilities","title":"utilities","text":"<p>searching for useful logging</p> <pre><code>    $badlist | ForEach-Object {\nWrite-Host\n$_ | select *\n$_.name -replace '\\\\\\\\server\\\\', ''`\n-replace 'c\\$\\\\server\\\\Output\\\\', ''`\n-replace 'serverOutput\\d{3}\\\\', ''`\n-replace '\\\\\\d{3}_\\d{14}\\.out'\n} | Get-Unique -OutVariable $fixed\n</code></pre>","tags":["regex","automation","readability","style guide"]},{"location":"scraping/","title":"scraping content","text":"<p>scrape an mp3</p> <pre><code>wget -r -l1 -H -nd -A mp3 -e robots=off http://example/url\n</code></pre>"},{"location":"todocli/","title":"todo cli","text":"<ul> <li>included in this cookiecutter template</li> </ul> <p>workflow cookiecutter</p> <pre><code># todocli.md todocli app\nalias t='clear &amp;&amp; ./todocli/todo.sh'\nalias d='clear &amp;&amp; t listpri a'\nalias snooze='clear &amp;&amp; t listpri'\nalias done='clear &amp;&amp; cat ./todocli/done.txt'\nalias tedit='vim ./todocli/todo.txt'\nalias tall='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"+\"'\nalias tpri='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(A\"'\nalias tprib='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(B\"'\nalias tpric='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(C\"'\nalias thelp='clear &amp;&amp; ./todocli/todo.sh shorthelp'\n</code></pre> <p></p>"},{"location":"users/","title":"users","text":"<p>see who is logged in</p> <pre><code>w\n</code></pre> <p>kill their session</p> <pre><code>pkill -KILL -u theirusername\n</code></pre> <pre><code>/etc/group\n</code></pre> <p>change owner</p> <pre><code>chown -R username folder/\n</code></pre>"},{"location":"vim/","title":"vim","text":"<ul> <li>vim is an extremely powerful tool for editing text and automation</li> </ul>","tags":["vim","regex","automation"]},{"location":"vim/#record-and-playback","title":"record and playback","text":"<ol> <li>q then any letter to start recording</li> <li>q to stop recording</li> <li>playback with @(your letter)</li> <li>use numbers to repeat e.g. 4@f repeats macro f four times</li> </ol>","tags":["vim","regex","automation"]},{"location":"vim/#vim-in-the-browser","title":"vim in the browser","text":"<ul> <li>vimium</li> </ul>","tags":["vim","regex","automation"]},{"location":"vim/#vim-in-the-command-line","title":"vim in the command line","text":"<pre><code># vim mode\n# to revert for someone that doesnt use vi\nset -o vi\n# set -o emacs\n#bindkey -v\n</code></pre> <pre><code>.---------------------------------------------------------------------------.\n|                                                                           |\n|                          Readline VI Editing Mode                         |\n|                     Default Keyboard Shortcuts for Bash                   |\n|                               Cheat Sheet                                 |\n|                                                                           |\n'---------------------------------------------------------------------------'\n| Peteris Krumins (peter@catonmat.net), 2008.01.08                          |\n| http://www.catonmat.net  -  good coders code, great reuse                 |\n|                                                                           |\n| Released under the GNU Free Document License                              |\n'---------------------------------------------------------------------------'\n\n ======================== Keyboard Shortcut Summary ========================\n\n.--------------.------------------------------------------------------------.\n|              |                                                            |\n| Shortcut     | Description                                                |\n|              |                                                            |\n'--------------'------------------------------------------------------------'\n| Switching to COMMAND Mode:                                                |\n'--------------.------------------------------------------------------------'\n| ESC          | Switch to command mode.                                    |\n'--------------'------------------------------------------------------------'\n| Commands for Entering INPUT Mode:                                         |\n'--------------.------------------------------------------------------------'\n| i            | Insert before cursor.                                      |\n'--------------+------------------------------------------------------------'\n| a            | Insert after cursor.                                       |\n'--------------+------------------------------------------------------------'\n| I            | Insert at the beginning of line.                           |\n'--------------+------------------------------------------------------------'\n| A            | Insert at the end of line.                                 |\n'--------------+------------------------------------------------------------'\n| c&lt;mov. comm&gt; | Change text of a movement command &lt;mov. comm&gt; (see below). |\n'--------------+------------------------------------------------------------'\n| C            | Change text to the end of line (equivalent to c$).         |\n'--------------+------------------------------------------------------------'\n| cc or S      | Change current line (equivalent to 0c$).                   |\n'--------------+------------------------------------------------------------'\n| s            | Delete a single character under the cursor and enter input |\n|              | mode (equivalent to c[SPACE]).                             |\n'--------------+------------------------------------------------------------'\n| r            | Replaces a single character under the cursor (without      |\n|              | leaving command mode).                                     |\n'--------------+------------------------------------------------------------'\n| R            | Replaces characters under cursor.                          |\n'--------------+------------------------------------------------------------'\n| v            | Edit (and execute) the current command in the text editor. |\n|              | (an editor defined in $VISUAL or $EDITOR variables, or vi  |\n'--------------'------------------------------------------------------------'\n| Basic Movement Commands (in command mode):                                |\n'--------------.------------------------------------------------------------'\n| h            | Move one character right.                                  |\n'--------------+------------------------------------------------------------'\n| l            | Move one character left.                                   |\n'--------------+------------------------------------------------------------'\n| w            | Move one word or token right.                              |\n'--------------+------------------------------------------------------------'\n| b            | Move one word or token left.                               |\n'--------------+------------------------------------------------------------'\n| W            | Move one non-blank word right.                             |\n'--------------+------------------------------------------------------------'\n| B            | Move one non-blank word left.                              |\n'--------------+------------------------------------------------------------'\n| e            | Move to the end of the current word.                       |\n'--------------+------------------------------------------------------------'\n| E            | Move to the end of the current non-blank word.             |\n'--------------+------------------------------------------------------------'\n| 0            | Move to the beginning of line                              |\n'--------------+------------------------------------------------------------'\n| ^            | Move to the first non-blank character of line.             |\n'--------------+------------------------------------------------------------'\n| $            | Move to the end of line.                                   |\n'--------------+------------------------------------------------------------'\n| %            | Move to the corresponding opening/closing bracket.         |\n'--------------'------------------------------------------------------------'\n| Character Finding Commands (these are also Movement Commands):            |\n'--------------.------------------------------------------------------------'\n| fc           | Move right to the next occurance of char c.                |\n'--------------+------------------------------------------------------------'\n| Fc           | Move left to the previous occurance of c.                  |\n'--------------+------------------------------------------------------------'\n| tc           | Move right to the next occurance of c, then one char       |\n|              | backward.                                                  |\n'--------------+------------------------------------------------------------'\n| Tc           | Move left to the previous occurance of c, then one char    |\n|              | forward.                                                   |\n'--------------+------------------------------------------------------------'\n| ;            | Redo the last character finding command.                   |\n'--------------+------------------------------------------------------------'\n| ,            | Redo the last character finding command in opposite        |\n|              | direction.                                                 |\n'--------------+------------------------------------------------------------'\n| |            | Move to the n-th column (you may specify the argument n by |\n|              | typing it on number keys, for example, 20|)                |\n'--------------'------------------------------------------------------------'\n| Deletion Commands:                                                        |\n'--------------.------------------------------------------------------------'\n| x            | Delete a single character under the cursor.                |\n'--------------+------------------------------------------------------------'\n| X            | Delete a character before the cursor.                      |\n'--------------+------------------------------------------------------------'\n| d&lt;mov. comm&gt; | Delete text of a movement command &lt;mov. comm&gt; (see above). |\n'--------------+------------------------------------------------------------'\n| D            | Delete to the end of the line (equivalent to d$).          |\n'--------------+------------------------------------------------------------'\n| dd           | Delete current line (equivalent to 0d$).                   |\n'--------------+------------------------------------------------------------'\n| CTRL-w       | Delete the previous word.                                  |\n'--------------+------------------------------------------------------------'\n| CTRL-u       | Delete from the cursor to the beginning of line.           |\n'--------------'------------------------------------------------------------'\n| Undo, Redo and Copy/Paste Commands:                                       |\n'--------------.------------------------------------------------------------'\n| u            | Undo previous text modification.                           |\n'--------------+------------------------------------------------------------'\n| U            | Undo all previous text modifications.                      |\n'--------------+------------------------------------------------------------'\n| .            | Redo the last text modification.                           |\n'--------------+------------------------------------------------------------'\n| y&lt;mov. comm&gt; | Yank a movement into buffer (copy).                        |\n'--------------+------------------------------------------------------------'\n| yy           | Yank the whole line.                                       |\n'--------------+------------------------------------------------------------'\n| p            | Insert the yanked text at the cursor.                      |\n'--------------+------------------------------------------------------------'\n| P            | Insert the yanked text before the cursor.                  |\n'--------------'------------------------------------------------------------'\n| Commands for Command History:                                             |\n'--------------.------------------------------------------------------------'\n| k            | Move backward one command in history.                      |\n'--------------+------------------------------------------------------------'\n| j            | Move forward one command in history.                       |\n'--------------+------------------------------------------------------------'\n| G            | Move to history line N (for example, 15G).                 |\n'--------------+------------------------------------------------------------'\n| /string or   | Search history backward for a command matching string.     |\n| CTRL-r       |                                                            |\n'--------------+------------------------------------------------------------'\n| ?string or   | Search history forward for a command matching string.      |\n| CTRL-s       | (Note that on most machines Ctrl-s STOPS the terminal      |\n|              | output, change it with `stty' (Ctrl-q to resume)).         |\n'--------------+------------------------------------------------------------'\n| n            | Repeat search in the same direction as previous.           |\n'--------------+------------------------------------------------------------'\n| N            | Repeat search in the opposite direction as previous.       |\n'--------------'------------------------------------------------------------'\n| Completion commands:                                                      |\n'--------------.------------------------------------------------------------'\n| TAB or = or  | List all possible completions.                             |\n| CTRL-i       |                                                            |\n'--------------+------------------------------------------------------------'\n| *            | Insert all possible completions.                           |\n'--------------'------------------------------------------------------------'\n| Miscellaneous commands:                                                   |\n'--------------.------------------------------------------------------------'\n| ~            | Invert case of the character under cursor and move a       |\n|              | character right.                                           |\n'--------------+------------------------------------------------------------'\n| #            | Prepend '#' (comment character) to the line and send it to |\n|              | the history.                                               |\n'--------------+------------------------------------------------------------'\n| _            | Inserts the n-th word of the previous command in the       |\n|              | current line.                                              |\n'--------------+------------------------------------------------------------'\n| 0, 1, 2, ... | Sets the numeric argument.                                 |\n'--------------+------------------------------------------------------------'\n| CTRL-v       | Insert a character literally (quoted insert).              |\n'--------------+------------------------------------------------------------'\n| CTRL-r       | Transpose (exchange) two characters.                       |\n'--------------'------------------------------------------------------------'\n\n ===========================================================================\n\n.---------------------------------------------------------------------------.\n| Peteris Krumins (peter@catonmat.net), 2008.01.08.                         |\n| http://www.catonmat.net  -  good coders code, great reuse                 | \n|                                                                           |\n| Released under the GNU Free Document License                              |\n'---------------------------------------------------------------------------'\n</code></pre>","tags":["vim","regex","automation"]},{"location":"bujo/2023/","title":"2023","text":"<ul> <li>workflow</li> <li>applying the new workflow</li> <li>and some feng shui to my cheatsheets</li> </ul>"},{"location":"bujo/bujo/","title":"bullet journaling","text":"<ul> <li>bullet journaling is simply using bullets in your notes!</li> <li>to keep notes concise, it is not magic</li> <li>it existed on paper, now the bullet journal guy that sells the book named this...</li> <li>is trying to patent and copyright silly things like the portmanteauu <code>bujo</code></li> <li>dude, are you serious...</li> <li> with optional added syntax like *oO-x etc.</li> </ul>","tags":["bujo","click","aliases"]},{"location":"bujo/bujo/#alias","title":"alias","text":"<pre><code># bullet journaling aka bujo\nalias rd=\"vim ./readme.md\"\nalias cl=\"vim ./changelog.md\"\nalias jf='mkdir \"$(date +%F)\" &amp;&amp; cd \"$(date +%F)\"'\nalias ft='vim ./future.md'\nalias cll='vim ./collections.md'\nalias in='vim ./index.md'\nalias fj='vim ./\"$(date +%F)\".md'\nalias bj='cd ./bujo &amp;&amp; fj || echo \"there is no bujo folder\"'\nalias bujo='cd ./bujo &amp;&amp; fj || mkdir bujo &amp;&amp; cd ./bujo &amp;&amp; vim ./\"$(date +%F)\".md'\n</code></pre>","tags":["bujo","click","aliases"]},{"location":"bujo/bujo/#click","title":"click","text":"<pre><code>Usage: cli.py bujo [OPTIONS] COMMAND [ARGS]...\n\nbullet journaling &amp; todocli\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  day        week - cps state rollback test\ndayfolder  create subfolder with named todays date\n  edit       edit plugin\n  folder     create bujo folder\n  future     bujo index file\n  index      bujo index file\n  m          mkdocs serve\n  month      month file\n  read       read a bujo/ file\n  remote     jobs on remotive\n  s          start dev server\n  snip       open snippet maker\n  todo       generic todo\n  week       week - cps state rollback test\nww         weather\n  year       week - cps state rollback test\nzl         markdownlint\n</code></pre>","tags":["bujo","click","aliases"]},{"location":"django/django/","title":"django","text":"<ul> <li>i have a django site here that i tinker with</li> <li>https://shane0.pythonanywhere.com/</li> <li>see youtube link bottom of page</li> <li>I have some django screencasts</li> <li>use it for websites, front or back end</li> <li>django is a huge time saver</li> <li>has a bunch of stuff built in</li> <li>todo: put my django click app here</li> </ul> <pre><code># django\nalias dr='python manage.py runserver 8000'\nalias vvv='virtualevn venv'\nalias vv='source venv/bin/activate'\nalias vf='pip install --editable .'\nalias vr='pip install -r requirements.txt'\nalias lt='ls --human-readable --size -1 -S --classify'\n</code></pre> <pre><code>python manage.py runserver\npython manage.py makemigrations\npython manage.py migrate\npython manage.py migrate --run-syncdb\n</code></pre>","tags":["django"]},{"location":"django/django/#hosting","title":"hosting","text":"<ul> <li>pythonanywhere is free and works with a sqlite db</li> <li>if you want postgres you can use supabase for free</li> <li>pythonanywhere does not allow connecting to supabase unless you pay</li> <li>this was an annoying waste of time just to determine what the errors meant</li> <li>I had to dig into their forums to find a user that explained you have to pay to enable it</li> <li>side note about python anywhere: fastapi requires asgi &amp; they only provide wsgi</li> <li>I've tried a few other ways to host django</li> <li>google cloud run</li> <li>aws</li> <li>linode &amp; openlitespeed</li> <li>python anywhere is the only one I stuck with</li> </ul>","tags":["django"]},{"location":"django/flask/","title":"flask","text":"<ul> <li>digging up old python hacks do not try these at home</li> </ul> <pre><code>import os\nimport subprocess\nfrom cookiecutter.main import cookiecutter\ncutter = r'c:\\\\cookiecutter\\'\n# outputdir = r'c:\\examples'\ndef cutftp(proj, username, passw, ticketno, outputdir):\n\"\"\" cut cli app \"\"\"\ntry:\nprint('cut ftp for ' + proj)\nprint(str(outputdir))\ncookiecutter(cutter,\noutput_dir=outputdir,\nno_input=True,\noverwrite_if_exists=False,\nextra_context={\n'proj_name': proj,\n'user': username,\n'pwd': passw,\n'ticket': ticketno\n})\nexcept Exception as derp:\nprint('ftp cutter failed ', derp)\n# cutcliapp('test',r'z:\\it\\temp')\ndef main():\npass\nif __name__ == '__main__':\nmain()\n</code></pre> <ul> <li>flask calling cookiecutter to launch projects</li> </ul> <pre><code>import os\nimport subprocess\nfrom cookiecutter.main import cookiecutter\n# folder with a cookiecutter template\ncutter = r'c:\\\\cookiecutter'\n# outputdir = r'c:\\output'\ndef cutftp(proj, username, passw, ticketno, outputdir):\n\"\"\" cut cli app \"\"\"\ntry:\nprint('cut ftp setup for ' + proj)\nprint(str(outputdir))\ncookiecutter(cutter,\noutput_dir=outputdir,\nno_input=True,\noverwrite_if_exists=False,\nextra_context={\n'proj_name': proj,\n'user': username,\n'pwd': passw,\n'ticket': ticketno\n})\nexcept Exception as derp:\nprint('cutter failed ', derp)\ndef main():\npass\nif __name__ == '__main__':\nmain()\n</code></pre> <pre><code>import os\nimport subprocess\nfrom cookiecutter.main import cookiecutter\ncutter = r'c:\\path\\'\n# outputdir = r'c:\\output\\'\ndef cutcliapp(project, outputfolder):\n\"\"\" cut cli app \"\"\"\ntry:\nprint('cutting cli app for ' + project)\ncookiecutter(cutter,\noutput_dir=outputfolder,\nno_input=True,\noverwrite_if_exists=True,\nextra_context={\n'proj_name': project\n})\nexcept Exception:\nprint('cutcliapp cutter failed')\n# cutcliapp('test',r'y:\\mapped\\drives')\ndef main():\npass\nif __name__ == '__main__':\nmain()\n</code></pre> <pre><code>    p = subprocess.Popen(['powershell.exe','C:/path/script.ps1'])\n</code></pre> <pre><code>@app.route('/scheduler/')\ndef UpdateScheduler():\nupdateScript = subprocess.check_output([\"C:\\\\WINDOWS\\\\system32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\", \". \\\"./checks/scheduler\\\";\"])\nflash('updating scheduler output')\nreturn render_template('utilities_scheduler.html',updateScript=updateScript)\n</code></pre> <pre><code>{% with messages = get_flashed_messages() %}\n  {% if messages %}\n    &lt;ul class=flashes&gt;\n    {% for message in messages %}\n      &lt;li&gt;{{ message }}&lt;/li&gt;\n    {% endfor %}\n    &lt;/ul&gt;\n     {{updateScript}}\n  {% endif %}\n{% endwith %}\n</code></pre> <ul> <li>converting pdfs</li> <li>reuqires ghostscript</li> </ul> <pre><code># ConvertPdfToTif\n@app.route('/utilities/pdf2tif', methods=['POST'])\ndef ConvertPdfToTif():\npdfPath=request.form['pdfPath']\ntifPath=request.form['tifPath']\nflash('Converting %s to %s' % (pdfPath, tifPath))\np2t = subprocess.Popen(['powershell.exe','C:\\\\Users\\\\username\\\\\\\\pdf.ps1', pdfPath, tifPath])\nreturn render_template('utilities_pdf2tif.html', pdfPath=pdfPath, tifPath=tifPath)\n</code></pre> <pre><code>param(\n[string]$folder,\n[string]$destinationfolder\n)\n$($MyInvocation.MyCommand.Definition) &gt;&gt; C:\\Users\\username\\log.md\nget-date | ac  C:\\Users\\username\\\\log.md\nwrite-host \"running $($MyInvocation.MyCommand.Definition)\"\nwrite-host $folder $destinationfolder\nSet-Location $folder\n$tool = '\\\\server\\GhostScript\\bin\\gswin32c.exe'\n$pdfs = get-childitem . -recurse | where {$_.Extension -match \"pdf\"}\nforeach($pdf in $pdfs)\n{\n#If any pdf is found in the source folder, checks to see if the destination folder exists, and if doesn't, creates it.\nif(-Not(test-path $destinationfolder))\n{\nNew-Item -ItemType Directory -Force -Path $destinationfolder\n}\n#Sets the $tiff variable based on the name of the pdf, removes spaces.\n$tiff = $destinationfolder+'\\'+($pdf.BaseName.split('.')[0] -replace (\" \" , \"\")) + '.tif'\nWrite-Host Tiff path is $tiff\n#Checks to see if the tiff file already exists as destination folder and skips it.\nif(test-path $tiff)\n{\n\"TIFF file already exists: \" + $tiff\n}\nelse\n{\n'Processing ' + $pdf.Name\n#Sets the output parameter for ghostscript. Can expand functionality later if necessary.\n$param = \"-sOutputFile=$tiff\"\n&amp; $tool -q -dNOPAUSE -sDEVICE=tiffg4 $param -r300 $pdf.FullName -c quit\n}\n}\n</code></pre> <ul> <li>7 zip called from flask app</li> </ul> <pre><code>function zipit([string]$copyme){\n$($MyInvocation.MyCommand.Definition) &gt;&gt; C:\\Users\\username\\log.md\n\"zipit triggered\" | ac C:\\Users\\username\\log.md\nget-date | ac  C:\\Users\\username\\log.md\n$copyme | ac C:\\Users\\username\\log.md\n$yymmdd = get-date -format yyyy-MM-dd-hhmm\n$Source = \"$copyme\"\n$Target = \"$copyme\\$yymmdd`copy.zip\"\n&amp; \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx=9  $Target $Source\nreturn \"$Target\"\n}\n</code></pre> <ul> <li>folder template</li> </ul> <pre><code>function new-ticketfolder {\n&lt;#\n.Synopsis\n daily use utility scripts\n.Description\n creates files for projects \n.Example\n C:\\PS&gt;new-ticketfolder c:\\foldername\\\n.Notes\n Name: new-ticketfolder\n.Link\n.Inputs\n folder name\n.Outputs\n None\n#Requires -Version 2.0\n#&gt;\n[CmdletBinding(SupportsShouldProcess=$True)]\nParam\n(\n[Parameter(Mandatory=$true,HelpMessage=\"enter ticket folder\")]\n[string]$ticketfolder\n)\nPROCESS {\n$($MyInvocation.MyCommand.Definition) &gt;&gt; C:\\Users\\\\log.md\nget-date | ac  C:\\Users\\\\log.md\n$ticketfolder | ac C:\\Users\\\\log.md\nif ($pscmdlet.ShouldProcess(\"Continue?\")) {\n#$ticketfolder = read-host 'enter ticket folder'\n$yyyymmdd = get-date -Format yyyy-MM-dd\nNew-Item \"$ticketfolder`\\$yyyymmdd\" -type directory -Force\n#  New-Item \"$ticketfolder`\\$yyyymmdd\\index.md\" -type file -Force\n$tfiles = @('C:\\Users\\username\\cheater.md',\n'C:\\Users\\username\\index.md',\n'C:\\Users\\username\\fix.ps1',\n'C:\\Users\\username\\fix.sql'\n)\n$tfiles | % {copy-item $_  \"$ticketfolder`\\$yyyymmdd\" }\n}\nelse {\nWrite \"nope, bad things happened\"\n}\n}\nreturn \"new ticket folder at $ticketfolder\"\n} #End function\n</code></pre>"},{"location":"django/folders_files/","title":"folders and files","text":"<ul> <li>quick and dirty way to serve static files</li> <li>folders and files on a django site</li> <li>combine with tools to convert markdown to htlm</li> <li>pandoc, pandas, revealjs, etc.</li> <li>run manually or in pipelines</li> <li>serve files using rsync, ftp or dropbox folders</li> </ul>","tags":["django","folders and files"]},{"location":"django/folders_files/#pythonanywherepythonanywhereurlspy","title":"<code>pythonanywhere/pythonanywhere/urls.py</code>","text":"<pre><code>from django.contrib import admin\nfrom django.urls import path, include\nfrom home import views\nurlpatterns = [\npath(\"admin/\", admin.site.urls),\npath('', views.homepage),\npath(r'blog/', include('mdblog.urls')),\n]\n</code></pre>","tags":["django","folders and files"]},{"location":"django/folders_files/#pythonanywherepythonanywhereurlspy_1","title":"<code>pythonanywhere/pythonanywhere/urls.py</code>","text":"<pre><code>\"\"\" mdblog urls\"\"\"\nfrom django.urls import path,include\nfrom . import views\nurlpatterns = [\npath('', views.blog, name='blog'),\npath('&lt;folder&gt;/', views.view_folder),\npath('&lt;folder&gt;/&lt;file&gt;', views.view_file)\n]     \n</code></pre>","tags":["django","folders and files"]},{"location":"django/folders_files/#pythonanywheremdblogviewspy","title":"<code>pythonanywhere/mdblog/views.py</code>","text":"<pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse \nimport glob\nimport os\nfrom django.conf import settings\nMDBLOGFOLDER = os.path.join(settings.BASE_DIR, \"whereveryouwant/\")\nMDPAGES = glob.glob(MDBLOGFOLDER + '/*/')\ndef blog(request):\n\"\"\"return blog folders\"\"\"\ndirectories = next(os.walk(MDBLOGFOLDER))[1]\nreturn render(request, 'mdblog/directories.html', {'directories':directories})\ndef file_get_contents(filename):\n\"\"\"contents of one file\"\"\"\nwith open(filename, 'r',encoding=\"utf-8\") as f:\nreturn f.read()\ndef view_folder(request,folder):\n\"\"\"list files in one folder\"\"\"\nfolder = MDBLOGFOLDER + folder\nhtml = \"\" #r\"&lt;h3&gt;%s&lt;/h3&gt;\" % folder\nhtml += \"&lt;ul&gt;\"\nif os.path.isdir(folder):\nonlyfiles = [f for f in os.listdir(folder) if os.path.isfile(os.path.join(folder, f))]\nfor f in onlyfiles:\nhtml += (\"&lt;li&gt;\\n\")\nhtml += \"&lt;a href=%s&gt;%s&lt;/a&gt;\" % (f, f)\nhtml += (\"&lt;/li&gt;\\n\")\nelse:\nhtml += f\"&lt;br&gt;folder: {folder} is empty\"\nhtml += \"&lt;/ul&gt;\"\nreturn render(request, 'mdblog/folder.html', {\n'html': html,\n'folder': folder,\n})\ndef view_file(request, folder, file):\n\"\"\"show one file\"\"\"\nhtml = \"\" #r\"&lt;h3&gt;%s&lt;/h3&gt;\" % folder\nhtml += '&lt;h3&gt;%s&lt;/h3&gt;' % file\ncontents = file_get_contents(MDBLOGFOLDER + '/' + folder + '/' + file)\nhtml_end = \"\" #\"&lt;a class=\\\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect \\\"\\ href=%s&gt;%s&lt;/a&gt;\" % ('', 'run')\nreturn render(request, 'mdblog/file.html', {\n'html':html,\n'html_end':html_end,\n'contents': contents})\n</code></pre>","tags":["django","folders and files"]},{"location":"django/home/","title":"home page app","text":"<ul> <li>quick and dirty home page routing</li> <li>start app</li> </ul> <pre><code>python manage.py startapp home </code></pre> <ul> <li>add to your starting point urls.py</li> </ul> <pre><code>from django.contrib import admin\nfrom django.urls import path, include\nfrom home import views\nurlpatterns = [\npath(\"admin/\", admin.site.urls),\npath('', views.homepage),\n]\n</code></pre> <ul> <li>home/views.py  </li> </ul> <pre><code>from django.shortcuts import render\nfrom datetime import datetime\ndef homepage(request):\nthis_date = datetime.now()\nthis_date = this_date.strftime('year %Y week %U day %j')\nhtml = \"\"\"\n        \"\"\"\nreturn render(request, 'home.html', {'html':html,'today':this_date})\n</code></pre> <ul> <li>templates/home.html</li> </ul> <pre><code>{% extends \"base.html\" %} {% block title %} Menu {% endblock %} {% block content %} \n&lt;div class=\"container\"&gt;\n&lt;div class=\"row m-5 p-3\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;h3&gt;microapps&lt;/h3&gt;\n&lt;a href=\"boop\"\nrole=\"button\" \nclass=\"btn btn-light m-3\" mr-1&gt;boop&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"row m-5 p-3\"&gt;\n&lt;div class=\"col\"&gt;\n&lt;a href=\"./blog/\"\nrole=\"button\" class=\"btn btn-light mr-1 m-3\"&gt;blog folder&lt;/a&gt;\n&lt;hr /&gt; {{today|safe}}\n        &lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n{% endblock %}\n</code></pre> <ul> <li>404.html</li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Page Not Found&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=\"#ffffff\"&gt;\n&lt;hr&gt;\n&lt;h1&gt;404&lt;/h1&gt;&lt;br&gt;&lt;a href=\"{{ request.get_host }}/\"&gt;bird up!&lt;/a&gt;\n&lt;hr&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>403.html</li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Page Not Found&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=\"#ffffff\"&gt;\n&lt;hr&gt;\n&lt;h1&gt;403&lt;/h1&gt;&lt;br&gt;&lt;a href=\"{{ request.get_host }}/\"&gt;bird up!&lt;/a&gt;\n&lt;hr&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>500.html</li> </ul> <pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Page Not Found&lt;/title&gt;\n&lt;/head&gt;\n&lt;body bgcolor=\"#ffffff\"&gt;\n&lt;hr&gt;\n&lt;h1&gt;500&lt;/h1&gt;&lt;br&gt;&lt;a href=\"{{ request.get_host }}/\"&gt;bird up!&lt;/a&gt;\n&lt;hr&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li>base.html</li> </ul> <pre><code>{% load static %}\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;meta\ncharset=\"utf-8\"\nname=\"viewport\"\ncontent=\"width=device-width, initial-scale=1\" /&gt;\n&lt;title&gt;{% block title %}{% endblock %}&lt;/title&gt; \n    {% include \"head.html\" %} \n    {% block extrahead %}\n    {% endblock %}\n  &lt;/head&gt;\n&lt;body&gt; {% include \"nav.html\" %} &lt;div class=\"container text-center\"&gt; {% block content %}{% endblock %} &lt;/div&gt;\n&lt;!-- {% include \"menu.html\" %} --&gt;\n&lt;!-- #include file=\"footer.html\" --&gt;\n&lt;script\nsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"\nintegrity=\"\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;script\nsrc=\"https://code.jquery.com/jquery-1.12.4.min.js\"\nintegrity=\"\"\ncrossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"django/home_fancy/","title":"home page app fancy version","text":"<ul> <li>quick and dirty home page that has some dynamic features</li> <li>makes routing initial urls to apps automatic</li> <li>lists folders in your django app</li> <li>excludes ones you do not want urls for</li> <li>creates urls to <code>your_apps/</code></li> <li>start app</li> </ul> <pre><code>python manage.py startapp home </code></pre> <ul> <li>rout in your initial urls.py</li> </ul> <pre><code>from home import views\npath('', views.homepage, name='home'),\n</code></pre> <ul> <li>home/views.py</li> </ul> <pre><code>from django.shortcuts import render\nfrom django.http import HttpResponse\nfrom automation.gadget import findviews, getmodule, cleanlist\nimport os\ndef homepage(request):\nfolders = next(os.walk('.'))[1]\nexcluded = ['home',\n'testui',\n'sandbox',\n'snippets',\n'static',\n'tests',\n]\nfolders = [f for f in folders if f not in (excluded)]\nfolders = sorted(folders)\nhtml = \"\"\"\n            &lt;h4&gt;tests topics&lt;/h4&gt;\n            \"\"\"\nfor folder in folders:\nhtml += \"&lt;a class=\\\"mdl-button \\\" href=%s&gt;%s&lt;/a&gt;   \" % (\nfolder, folder)\n# return HttpResponse(html)\nreturn render(request, 'home/home.html', {'html':html})\n</code></pre> <ul> <li>automation.gadget.py</li> </ul> <pre><code>import inspect\nimport imp\ndef getmodule(path):\nname = inspect.getmodulename(path)\nreturn name\ndef findviews(path):\n\"\"\"input view.py path output links to pages (function name)\"\"\"\npath = imp.load_source(\"__inspected__\", path)\nall_functions = inspect.getmembers(path, predicate=inspect.isfunction)\nif(all_functions):\nall_functions = sorted(all_functions)\nreturn all_functions\nelse:\nreturn('no views found')\ndef cleanlist(item_list, exclude):\n\"\"\"convert inspect tuple to list and apply exclude list\"\"\"\n# convert tuple to list\nlist_string = []\nfor item in item_list:\nlist_string.append(item[1].__name__)\n# apply exclusions\nclean_list = []\nfor e in list_string:\nif e not in exclude:\nclean_list.append(e)\nitem_list = clean_list\nreturn clean_list\ndef cleanhomelist(item_list, exclude):\npass\nif __name__ == '__main__':\npass\n</code></pre> <ul> <li>home.html</li> </ul> <pre><code>{% extends \"base.html\" %} {% block title %}Homepage{% endblock %} {% block content %}\n{{html|safe}}\n&lt;hr&gt;\n&lt;br&gt;\n{% endblock %}\n</code></pre>"},{"location":"django/upload/","title":"upload a file","text":"<p>To upload a file and save it to the drive using Django without using the database or models, you can follow these steps:</p> <ol> <li>Get the file from the request.</li> <li>Create a new file object using the <code>open()</code> function.</li> <li>Write the contents of the uploaded file to the new file object.</li> <li>Close the new file object.</li> <li>Save the new file object to the desired location.</li> </ol> <p>Here is a simple example of how to upload a file and save it to the drive using Django without using the database or models:</p> <pre><code>import os\ndef upload_file(request):\n# Get the file from the request.\nfile = request.FILES['file']\n# Create a new file object.\nwith open(os.path.join('/path/to/save/file', file.name), 'wb') as new_file:\n# Write the contents of the uploaded file to the new file object.\nfor chunk in file.chunks():\nnew_file.write(chunk)\n</code></pre> <p>This will save the uploaded file to the location <code>/path/to/save/file</code> with the file name <code>file.name</code>.</p> <p>You can also use Django's <code>FileSystemStorage</code> class to save the file to the drive without using the database or models. The <code>FileSystemStorage</code> class provides a convenient way to manage files stored on the filesystem. To use the <code>FileSystemStorage</code> class, you first need to create a <code>FileSystemStorage</code> object. You can then use the <code>save()</code> method on the <code>FileSystemStorage</code> object to save the uploaded file to the drive.</p> <p>Here is a simple example of how to use the <code>FileSystemStorage</code> class to save a file to the drive without using the database or models:</p> <pre><code>from django.core.files.storage import FileSystemStorage\ndef upload_file(request):\n# Get the file from the request.\nfile = request.FILES['file']\n# Create a FileSystemStorage object.\nfs = FileSystemStorage(location='/path/to/save/file')\n# Save the uploaded file to the drive.\nfile_name = fs.save(file.name, file)\n</code></pre> <p>This will save the uploaded file to the location <code>/path/to/save/file</code> with the file name <code>file_name</code>.</p> <p>Which method you use to save the file to the drive without using the database or models depends on your personal preference and the specific needs of your project.</p> <pre><code>import os\ndef save_file_to_folder(request, folder_path):\nfile = request.FILES['file']\n# Create a new file object.\nwith open(os.path.join(folder_path, file.name), 'wb') as new_file:\n# Write the contents of the uploaded file to the new file object.\nfor chunk in file.chunks():\nnew_file.write(chunk)\n</code></pre>"},{"location":"js/introspect/","title":"introspection","text":"<ul> <li> find my you don't know js book rewrite</li> <li> a zip file and dump here</li> </ul> <pre><code>console.dir(thingy)\n</code></pre>","tags":["js","introspection"]},{"location":"js/introspect/#blah","title":"blah","text":"<p>JavaScript is a very loose language, but has some interesting properties. Some of them are not obvious or are quite weird.</p> <p>The language uses prototype inheritance rather than the usual class inheritance from languages like Java, C++ or Python. To declare a class, you simply define a constructor function, which is really a normal function:</p> <pre><code>function MyClass() {}\n</code></pre> <p>The constructor defines a new property in the global space, named MyClass. The value associated with it is a function object that does nothing in our case.</p> <p>To create an instance of MyClass you simply call the constructor:</p> <p>var obj = new MyClass(); The new operator will create a new JavaScriptObject and invoke the function associated with the MyClass name, passing to it as invisible argument the newly created Object instance. Inside the \"constructor\" function, the code can use the special this property to refer to the instance.</p> <p>The following code snippet:</p> <p>function MyClass() {   this.ivar = 1; } creates a new property named ivar associated with the receiving Object instance.</p> <p>In JavaScript all objects act as hash tables. The keys in the hash tables are the names of the \"instance variables\" or \"properties\". With the latter definition of MyClass() and the obj definition above, the following two expressions return the same object: obj.ivar and obj[\"ivar\"].</p> <p>If an instance variable is not declared and you refer to it using the this[\"name-of-variable\"] you obtain the null value. This is nice since you can now verify if an instance variable is defined or not.</p> <p>In JavaScript classes are just properties of the global scope object. The global scope is accessible through the this keyword. To obtain the MyClass object for example, you can do:</p> <p>this[\"MyClass\"] You can also refer to the top-level obj variable with the expression:</p> <p>this[\"obj\"] You can iterate over all the variables and classes defined in the global scope by doing:</p> <p>for (i in this) print(i); Quite nifty, huh? On the right is the JavaScript bible I use. The information above is not in it though...</p> <p>Posted by ovidiu at February 26, 2004 08:24 PM |</p>","tags":["js","introspection"]},{"location":"js/js/","title":"js","text":"<ul> <li>todo: find my notes and move them here</li> <li>i finished nucamps full stack book camp in 2023</li> </ul>","tags":["js"]},{"location":"js/js/#retro-games","title":"retro games","text":"<ul> <li>retro games in plain js and python</li> <li>https://shanenull.com/adventure/</li> </ul>","tags":["js"]},{"location":"js/js/#topics","title":"topics","text":"<ul> <li>front end js html css</li> <li>react</li> <li>react mobile (aka react native)</li> <li>mongo</li> </ul>","tags":["js"]},{"location":"powershell/powershell/","title":"never use powershell","text":"<pre><code>@REM Tokenize current date.\n@for /f \"tokens=1,2,3,4 delims=/ \" %%a in ( 'date/t' ) do @set x=%%d\n@for /f \"tokens=1,2,3,4 delims=/ \" %%a in ( 'date/t' ) do @set m=%%b\n@for /f \"tokens=1,2,3,4 delims=/ \" %%a in ( 'date/t' ) do @set d=%%c\n\n@REM run today if no date passed\n@if \"%3\"==\"\" (\n@set yyyymmdd=%x%%m%%d%\n) else (\n@set yyyymmdd=%3\n)\n@ECHO Running %0\n@REM @ECHO For %YYYYMMDD%\n@SET project=%1\n@SET action=%2\n@call %~dp0\\config.bat\n@ECHO calling %scriptpath% %project% %action% %csvpath%\n@powershell -NoProfile -ExecutionPolicy Bypass %scriptpath% %csvpath% %project% %action% \n</code></pre> <pre><code>param(\n$csvconfig,\n$project,\n$action\n)\nfunction Get-ScriptFull\n{\nSplit-Path $script:MyInvocation.MyCommand.Definition\n$MyInvocation.ScriptName.Replace((Split-Path $MyInvocation.ScriptName),'').TrimStart('')\n}\n$scriptrunning = Get-ScriptFull\nwrite-host \"running $scriptrunning\"\n# path to your config\n# $csvconfig = 'clone.csv'\n$csvdata = Import-Csv $csvconfig\n$isodate = get-date -Format yyyy-MM-dd\n$yymmdd = get-date -Format yyMMdd\n# custom wildcards use yymmdd for today 170504\nfunction update-set($csvdata){\nforeach($_ in $csvdata){\n$_.path = $_.path.Replace('yymmdd',$yymmdd) \n$_.destination = $_.destination.Replace('yymmdd',$yymmdd) \n$_.path = $_.path.Replace('yyyy-MM-dd',$isodate)\n$_.destination = $_.destination.Replace('yyyy-MM-dd',$isodate) \n$_.path = $_.path.Replace('yesterday',$yesterday)\n$_.destination = $_.destination.Replace('yesterday',$yesterday) \n}\nreturn $csvdata\n}\nupdate-set($csvdata) --quiet --no-verbose | out-null\n# logging\nfunction Get-ScriptDirectory\n{\nSplit-Path $script:MyInvocation.MyCommand.Definition\n}\n$mypath = Get-ScriptDirectory\nwrite-host \"running $mypath using $csvconfig\"\n# ftp get and put\nfunction gettask($task){\nSet-Location C:\\winscp\nAdd-Type -Path \"WinSCPnet.dll\"\n# Set up session options\n$sessionOptions = New-Object WinSCP.SessionOptions -Property @{\nProtocol = [WinSCP.Protocol]::Sftp\nHostName = \"sftp.your.com\"\nUserName = \"something\"\nPassword = \"secrets\"\nSshHostKeyFingerprint = \"ssh-rsa 2048 e2:...:8a\"\n}\n$session = New-Object WinSCP.Session\ntry\n{\n# Connect\n$session.Open($sessionOptions)\n# Upload files\n$transferOptions = New-Object WinSCP.TransferOptions\n$transferOptions.TransferMode = [WinSCP.TransferMode]::Binary\n$transferResult = $session.GetFiles($task.destination, $task.path,  $False, $transferOptions)\n# Throw on any error\n$transferResult.Check()\n# Print results\nforeach ($transfer in $transferResult.Transfers)\n{\nWrite-Host (\"Download of {0} succeeded\" -f $transfer.FileName)\n}\n}\nfinally\n{\n$session.Dispose()\n}\nif($task.continue -eq 'y'){\nsubchain $task\n}   \n} # end gettask\n# put\nfunction puttask($task){\nSet-Location C:\\winscp\nAdd-Type -Path \"WinSCPnet.dll\"\n# Set up session options\n$sessionOptions = New-Object WinSCP.SessionOptions -Property @{\nProtocol = [WinSCP.Protocol]::Sftp\nHostName = \"sftp.some.com\"\nUserName = \"someuser\"\nPassword = \"pwdsecretomg\"\nSshHostKeyFingerprint = \"ssh-rsa 2048 0d:...8a\"\n}\n$session = New-Object WinSCP.Session\ntry\n{\n# Connect\n$session.Open($sessionOptions)\n# Upload files\n$transferOptions = New-Object WinSCP.TransferOptions\n$transferOptions.TransferMode = [WinSCP.TransferMode]::Binary\n$transferResult = $session.PutFiles($task.path, $task.destination)\n# Throw on any error\n$transferResult.Check()\n# Print results\nforeach ($transfer in $transferResult.Transfers)\n{\nWrite-Host (\"Upload of {0} succeeded\" -f $transfer.FileName)\n}\n}\nfinally\n{\n$session.Dispose()\n}\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n} # end puttask\nfunction movetask($task){\nmove-item $task.path $task.destination -Force\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction copytask($task){\ncopy-item $task.path $task.destination -Force\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction renametask($task){\nrename-item -path $task.path -newname $task.destination -Force\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction newtask($task){\nif(-not (test-path($task.path))){\nnew-item -path $task.path -ItemType $task.type \n} else {write-host \"$($task.path) already exists\"}\n# add test with email alert option to destination if this fails?\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction removetask($task){\nif($task.type = 'recursive'){\nremove-item -path $task.path -Recurse\n}else{\nremove-item -path $task.path\n}\nif($task.continue -eq 'y'){\nsubchain $task\n}      \n}\nfunction invoketask($task){\ninvoke-item -path $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}            \n}\nfunction cleartask($task){\nclear-content $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction addtask($task){\n$task.destination | add-content $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction cmdtask($task){\n&amp; $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction urltask($task){\nStart-Process \"chrome.exe\" $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction testtask($task){\nTest-Path($task.path)\nif(-not(test-path($task.path))){\n&amp; dna $($task.destination) email\n&amp; dna $task.destination email\n}\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction readtask($task){\nGet-Content $($task.path)\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction listtask($task){\nGet-ChildItem $task.path -r\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction scrapetask($task){\nInvoke-WebRequest $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}   \n}\nfunction servicetasktask($task){\nget-service -ComputerName $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n} \n}\nfunction atomtask($task){\natom -n -a $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction cliptask($task){\n$task.path | clip\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction findtask($task){\nget-childitem -path $task.path -r | Select-String -pattern $task.destination | ForEach-Object {write-host \"match in $task.path\"}\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction filebackuptask($task){\n$newfile = \"$($task.path)\" + \".\" + \"$isodate\"\ncopy-item -path $($task.path) -Destination $newfile -Force\nif($task.continue -eq 'y'){\nsubchain $task\n} \n}\nfunction ownertask($task){\nget-acl -Path $($task.path)\nif($task.continue -eq 'y'){\nsubchain $task\n}  \n}\nfunction zipfoldertask($task){\n&amp; \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx=9  $($task.destination) $($task.path)\nif($task.continue -eq 'y'){\nsubchain $task\n} \n}\nfunction emailtask($task){\n$param = @{\nSmtpServer = '1.0.0.1'\nFrom = 'SUPPORT@your.com'\nTo = $task.destination\nSubject = $task.path\nBody = \"&lt;html&gt;&lt;body&gt;$($task.type)&lt;br&gt;&lt;/body&gt;&lt;/html&gt;\"\nBodyAsHtml = $true\n}\nSend-MailMessage @param\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction removelinetask($task){\n$match = $task.type\n$clean = Get-Content $task.path | Where-Object {$_ -notmatch $match} \nnew-item $task.destination -ItemType file\nClear-Content $task.destination\n$clean | Out-File $task.destination\nif($task.continue -eq 'y'){\nsubchain $task\n}    \n}\nfunction replacelinetask($task){\n(Get-Content $task.path) | \nForeach-Object {$_ -replace $task.destination, $task.type}  | \nOut-File $task.path\nif($task.continue -eq 'y'){\nsubchain $task\n}\n}\nfunction expressionset($task){\nInvoke-Expression \"&amp; $($task.path)\"\nif($task.continue -eq 'y'){\nsubchain $task\n} \n}\n# these are logic for running a whole project or just one type of action for one project\nfunction subchain($task){\n&amp; dna $task.subproject $task.subaction\n}\nfunction runone($action,$task){\nswitch ($action) {\nget {gettask $task}\nput {puttask $task}\nmove {movetask $task}\ncopy  {copytask $task}\nclip {cliptask $task}\nrename {renametask $task}\nnew  {newtask $task}\nremove {removetask $task}\ninvoke  {invoketask $task}\nclear {cleartask $task}\nadd {addtask $task}\ncmd {cmdtask $task}\nurl {urltask $task}\ntest {testtask $task}\nlist {listtask $task}\nread {readtask $task}\nscrape {scrapetask $task}\nservice {servicetask $task}\natom {atomtask $task}\nfind {findtask $task}\nfilebackup {filebackuptask $task}\nzip {zipfoldertask $task}\nowner {ownertask $task}\nemail {emailtask $task}\nremoveline {removelinetask $task}\nreplacestring {replacelinetask $task}\niexp {expressionset $task}\ndefault {\"missing parameters\"}\n}\n}\nfunction runproject{\n$projectset = $csvdata | Where-Object {$_.project -eq $project}\nforeach($_ in $projectset){\n$action = $_.action\nrunone -action $action -task $_\nstart-sleep -s .5\n}\n}\nfunction filteroneaction($action){\n$taskset = $csvdata | Where-Object {$_.project -eq $project -and $_.action -eq $action}\nforeach($_ in $taskset){\nrunone -action $_.action -task $_\n}\n}\nif($action -eq $null){\nwrite-host \"no action passed running all actions on project $project\"\nrunproject\n}\nelseif ($action -ne $null) {\nwrite-host \"running only task type $action on project $project\"\nfilteroneaction $action\n}\n</code></pre>"},{"location":"python/basics/","title":"basics","text":""},{"location":"python/basics/#reverse-a-string","title":"Reverse a string.","text":"<pre><code>def reverse_string(string):\n\"\"\"Reverses a string.\n  Args:\n    string: A string.\n  Returns:\n    A reversed string.\n  \"\"\"\nreversed_string = \"\"\nfor i in range(len(string) - 1, -1, -1):\nreversed_string += string[i]\nreturn reversed_string\n# Example usage:\nprint(reverse_string(\"Hello World\"))\n</code></pre> <p>Output:</p> <pre><code>dlroW olleH\n</code></pre>"},{"location":"python/basics/#find-the-factorial-of-a-number","title":"Find the factorial of a number.","text":"<pre><code>def factorial(number):\n\"\"\"Finds the factorial of a number.\n  Args:\n    number: A number.\n  Returns:\n    The factorial of the number.\n  \"\"\"\nfactorial = 1\nfor i in range(1, number + 1):\nfactorial *= i\nreturn factorial\n# Example usage:\nprint(factorial(5))\n</code></pre> <p>Output:</p> <pre><code>120\n</code></pre> <p>The factorial of a non-negative integer n, denoted by n!, is the product of all positive integers less than or equal to n. The factorial of 0 is 1, according to the convention for an empty product.</p> <p>For example, 5! is equal to 120, since 120 is the product of 1, 2, 3, 4, and 5.</p> <p>Factorials are used in many areas of mathematics, including combinatorics, probability, and statistics. They are also used in some areas of computer science, such as algorithm design and cryptography.</p> <p>Here is a mathematical definition of factorial:</p> <pre><code>n! = 1 * 2 * 3 * ... * n\n</code></pre> <p>where n is a non-negative integer.</p> <p>Here is a recursive definition of factorial:</p> <pre><code>0! = 1\nn! = n * (n - 1)!\n</code></pre> <p>for n &gt; 0.</p> <p>Factorials can also be represented using the gamma function, which is a generalization of the factorial function to non-integer values.</p> <p>Factorials are used in many areas of mathematics, including combinatorics, probability, and statistics. They are also used in some areas of computer science, such as algorithm design and cryptography.</p> <p>Here are some specific examples of how factorials are used:</p> <ul> <li>Combinatorics: Factorials are used to count the number of ways to arrange a set of objects. For example, there are 5! (120) ways to arrange 5 distinct objects in a row.</li> <li>Probability: Factorials are used to calculate probabilities of events. For example, the probability of getting 5 heads in a row when flipping a coin is 1/32, which can be calculated using factorials.</li> <li>Statistics: Factorials are used in some statistical tests, such as the chi-squared test.</li> <li>Computer science: Factorials are used in some algorithms, such as the quicksort algorithm and the traveling salesman problem.</li> <li>Cryptography: Factorials are used in some cryptographic algorithms, such as the RSA cryptosystem.</li> </ul> <p>In addition to these specific examples, factorials are also used in many other areas of mathematics and science. For example, they are used in the study of number theory, graph theory, and differential equations.</p> <p>Factorials are a powerful and versatile mathematical tool with many applications in the real world. Understanding factorials can help you to better understand many different areas of mathematics and science.</p>"},{"location":"python/basics/#check-if-a-number-is-prime","title":"Check if a number is prime.","text":"<pre><code>def is_prime(number):\n\"\"\"Checks if a number is prime.\n  Args:\n    number: A number.\n  Returns:\n    True if the number is prime, False otherwise.\n  \"\"\"\nif number &lt;= 1:\nreturn False\nfor i in range(2, int(number**0.5) + 1):\nif number % i == 0:\nreturn False\nreturn True\n# Example usage:\nprint(is_prime(7))\nprint(is_prime(9))\n</code></pre> <p>Output:</p> <pre><code>True\nFalse\n</code></pre>"},{"location":"python/basics/#find-the-greatest-common-divisor-of-two-numbers","title":"Find the greatest common divisor of two numbers.","text":"<pre><code>def gcd(a, b):\n\"\"\"Finds the greatest common divisor of two numbers.\n  Args:\n    a: A number.\n    b: A number.\n  Returns:\n    The greatest common divisor of the two numbers.\n  \"\"\"\nwhile b != 0:\na, b = b, a % b\nreturn a\n# Example usage:\nprint(gcd(12, 18))\n</code></pre> <p>Output:</p> <pre><code>6\n</code></pre>"},{"location":"python/basics/#find-the-least-common-multiple-of-two-numbers","title":"Find the least common multiple of two numbers.","text":"<pre><code>def lcm(a, b):\n\"\"\"Finds the least common multiple of two numbers.\n  Args:\n    a: A number.\n    b: A number.\n  Returns:\n    The least common multiple of the two numbers.\n  \"\"\"\nreturn (a * b) // gcd(a, b)\n# Example usage:\nprint(lcm(12, 18))\n</code></pre> <p>Output:</p> <pre><code>36\n</code></pre>"},{"location":"","title":"Home","text":"<p>home workflow template buddhism</p> <p>retro games</p> <p>Info</p> <ul> <li>cheats snippets and tiny automation tools to supplement this project template:</li> <li>workflow cookiecutter</li> </ul>"},{"location":"#alias","title":"alias","text":"<ul> <li>mkdocs</li> </ul>"},{"location":"#aliases","title":"aliases","text":"<ul> <li>bullet journaling</li> </ul>"},{"location":"#automation","title":"automation","text":"<ul> <li>regex</li> <li>vim</li> </ul>"},{"location":"#bujo","title":"bujo","text":"<ul> <li>bullet journaling</li> </ul>"},{"location":"#click","title":"click","text":"<ul> <li>mkdocs</li> <li>bullet journaling</li> </ul>"},{"location":"#css","title":"css","text":"<ul> <li>css</li> </ul>"},{"location":"#django","title":"django","text":"<ul> <li>django</li> <li>folders and files</li> </ul>"},{"location":"#docs","title":"docs","text":"<ul> <li>markdown</li> </ul>"},{"location":"#folders-and-files","title":"folders and files","text":"<ul> <li>folders and files</li> </ul>"},{"location":"#introspection","title":"introspection","text":"<ul> <li>introspection</li> </ul>"},{"location":"#js","title":"js","text":"<ul> <li>introspection</li> <li>js</li> </ul>"},{"location":"#markdown","title":"markdown","text":"<ul> <li>markdown</li> </ul>"},{"location":"#mkdocs","title":"mkdocs","text":"<ul> <li>mkdocs</li> </ul>"},{"location":"#readability","title":"readability","text":"<ul> <li>markdown</li> <li>regex</li> </ul>"},{"location":"#regex","title":"regex","text":"<ul> <li>regex</li> <li>vim</li> </ul>"},{"location":"#style-guide","title":"style guide","text":"<ul> <li>regex</li> </ul>"},{"location":"#vim","title":"vim","text":"<ul> <li>vim</li> </ul>"}]}