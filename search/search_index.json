{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Info</p> <ul> <li>code snippets</li> <li>and microapps to supplement the workflow cookiecutter</li> </ul> <p>workflow cookiecutter</p>"},{"location":"bash/","title":"bash","text":"<pre><code>#!/usr/bin/env bash\nalias ea='code ~/.bash_aliases'\nalias sa='source ~/.bashrc'\nalias yourserver='ssh user@0.0.0.0'\nalias yourservers='ssh user@0.0.0.0'\nalias c='clear'\n# ls \nalias ll='ls -l'\nalias la='ls -A'\nalias l='ls -CF'\nalias lt='ls --human-readable --size -1 -S --classify'\nalias ctodo='cp -R ~/workflow/todocli/ .'\nalias showremote='echo \"https://github.com/\" $(head -1 &lt;(git remote -v | cut -d \":\" -f2 | cut -d \".\" -f1 | tr -s \" \" \"\\0\"))'\nalias mks='mkdocs serve'\n</code></pre>"},{"location":"bujo/","title":"bullet journaling","text":"<ul> <li>bullet journaling is simply using bullets in your notes!</li> <li>to keep notes concise, it is not magic</li> <li>it existed on paper, now the bullet journal guy that sells the book named this...</li> <li>is trying to patent and copyright silly things like the portmanteauu <code>bujo</code></li> <li>dude, are you serious...</li> <li> with optional added syntax like *oO-x etc.</li> </ul> <pre><code># bullet journaling aka bujo\nalias rd=\"vim ./readme.md\"\nalias cl=\"vim ./changelog.md\"\nalias jf='mkdir \"$(date +%F)\" &amp;&amp; cd \"$(date +%F)\"'\nalias ft='vim ./future.md'\nalias cll='vim ./collections.md'\nalias in='vim ./index.md'\nalias fj='vim ./\"$(date +%F)\".md'\nalias bj='cd ./bujo &amp;&amp; fj || echo \"there is no bujo folder\"'\nalias bujo='cd ./bujo &amp;&amp; fj || mkdir bujo &amp;&amp; cd ./bujo &amp;&amp; vim ./\"$(date +%F)\".md'\n</code></pre>"},{"location":"click/","title":"click","text":"<ul> <li>this workflow template includes click</li> <li>coming soon: plugins for web apps and cloud services</li> </ul> <p>workflow cookiecutter</p>"},{"location":"cookiecutter/","title":"cookiecutter","text":"<p>workflow cookiecutter</p> <pre><code># cookiecutter fix\nexport PATH=$HOME/.local/bin:$PATH\nalias newf='mkdir {utils,bujo,data,docs,results,scripts,srcrtests}'\nalias wf='cookiecutter workflow'\n</code></pre>"},{"location":"css/","title":"css","text":""},{"location":"django/","title":"django","text":"<pre><code># django\nalias dr='python manage.py runserver 8000'\n</code></pre>"},{"location":"flask/","title":"flask","text":"<pre><code>flask stuff\nalias efl='export FLASK_ENV=development'\nalias eefl='echo $FLASK_ENV'\nalias fdm='flask db migrate'\nalias fdu='flask db upgrade'\n</code></pre>"},{"location":"html/","title":"html","text":""},{"location":"js/","title":"js","text":""},{"location":"julian/","title":"julian dates","text":"<ul> <li>I find julian dates useful for various reasons</li> </ul> <pre><code># julian dates\nalias day='date +%D &amp;&amp; date +%j &amp;&amp; date +%A &amp;&amp; date +%d &amp;&amp; date +%u'\nalias fday='mkdir \"$(date +%j)\" &amp;&amp; cd \"$(date +%j)\"'\nalias mday='vim ./\"$(date +%j)\".md'\nalias fj='vim ./\"$(date +%F)\".md'\nalias week='date +%V'\nalias month='date +%B &amp;&amp; date +%m'\nalias year='date +%Y'\n</code></pre>"},{"location":"linux/","title":"linux","text":"<pre><code>alias r='ranger'\n# tmux\nalias ta='tmux attach -t'\nalias tl='tmux list-sessions'\nalias tksv='tmux kill-server'\nalias tkss='tmux kill-session -t'\nalias v='vi $(fzf)'\n# free space\nalias freespace='df -H --output=size,used,avail'\nalias fspace='sudo du -Sh | sort -rh | head -5'\nalias cports='sudo lsof -i -P -n | grep LISTEN'\n# commenting for shellcheck fixme later\n#alias trace='mtr --report-wide --curses $1'\n#alias killtcp='sudo ngrep -qK 1 $1 -d wlan0'\nalias usage='ifconfig wlan0 | grep bytes'\nalias connections='sudo lsof -n -P -i +c 15'\n# alias ducks='du -cks -- * | sort -rn | head\\'alias ducks=\\'du -cks -- * | sort -rn | head'\nalias myip='ip addr | grep inet'\n</code></pre>"},{"location":"macos/","title":"mac os","text":"<pre><code># macos find what is listening\nalias whohearsme='sudo lsof -i -P | grep LISTEN | grep :$PORT'\n# opens finder form terminal - open .\n# for mac\nalias lt='du -sh * | sort -h'\nalias howmany='find . -type f -print | wc -l'\n</code></pre>"},{"location":"mongo/","title":"mongo","text":""},{"location":"postgres/","title":"postgres","text":""},{"location":"python/","title":"python","text":"<pre><code>#alias vba='. venv/bin/activate'\nalias vvv='virtualevn venv'\nalias vv='source venv/bin/activate'\nalias vf='pip install --editable .'\nalias vr='pip install -r requirements.txt'\n</code></pre>"},{"location":"react/","title":"react","text":""},{"location":"todocli/","title":"todo cli","text":"<ul> <li>included in this cookiecutter template</li> </ul> <p>workflow cookiecutter</p> <pre><code># todocli.md todocli app\nalias t='clear &amp;&amp; ./todocli/todo.sh'\nalias d='clear &amp;&amp; t listpri a'\nalias snooze='clear &amp;&amp; t listpri'\nalias done='clear &amp;&amp; cat ./todocli/done.txt'\nalias tedit='vim ./todocli/todo.txt'\nalias tall='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"+\"'\nalias tpri='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(A\"'\nalias tprib='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(B\"'\nalias tpric='clear &amp;&amp; find . -name \"todo.txt\" | xargs grep \"(C\"'\nalias thelp='clear &amp;&amp; ./todocli/todo.sh shorthelp'\n</code></pre>"},{"location":"vim/","title":"vim","text":"<pre><code># vim mode\n# to revert for someone that doesnt use vi\nset -o vi\n# set -o emacs\n#bindkey -v\n</code></pre>"},{"location":"","title":"Home","text":"<p>Info</p> <ul> <li>code snippets</li> <li>and microapps to supplement the workflow cookiecutter</li> </ul> <p>workflow cookiecutter</p>"}]}